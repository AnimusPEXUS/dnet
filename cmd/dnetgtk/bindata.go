// Code generated by go-bindata.
// sources:
// ui/cert-editor.glade
// ui/key-editor.glade
// ui/login.glade
// ui/main.glade
// ui/page-key.glade
// ui/text-view.glade
// DO NOT EDIT!

package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _uiCertEditorGlade = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x98\xcf\x6f\xe2\x3a\x10\xc7\xef\xfd\x2b\xfc\x7c\x79\x87\xa7\x14\xda\xa7\x95\xf6\x10\x52\xa9\x48\xf4\xb0\x3d\x54\x6a\x77\xf7\x18\x4d\x9c\x21\xcc\x62\x3c\x59\xdb\x04\xf8\xef\x57\x81\xed\xb6\x05\xf3\x33\xad\x2a\x75\x73\x0b\xca\x8c\xf9\x7e\x67\x3e\x1e\xb0\xe3\xab\xf9\x44\x8b\x0a\xad\x23\x36\x3d\x79\x71\xde\x95\x02\x8d\xe2\x9c\x4c\xd1\x93\x5f\x1f\x06\xd1\x67\x79\x95\x9c\xc5\xff\x44\x91\xb8\x41\x83\x16\x3c\xe6\x62\x46\x7e\x24\x0a\x0d\x39\x8a\xff\xcf\x2f\xbb\xe7\x5d\x11\x45\xc9\x59\x4c\xc6\xa3\x1d\x82\xc2\xe4\x4c\x88\xd8\xe2\xcf\x29\x59\x74\x42\x53\xd6\x93\x85\x1f\xff\x27\x9f\xbe\xa8\x4e\x93\x9d\x65\x1c\x67\x3f\x50\x79\xa1\x34\x38\xd7\x93\x37\x7e\x7c\xcd\x73\x29\x28\xef\x49\xcb\xec\x65\x1d\x23\x44\x5c\x5a\x2e\xd1\xfa\x85\x30\x30\xc1\x9e\xac\xc8\x51\xa6\x51\x26\x0f\x76\x8a\x71\xe7\xf1\x6d\x38\x58\x81\x49\x87\xac\xa6\x4e\x26\x03\xd0\x6e\x6f\x3c\x5b\x42\xe3\xc1\x13\x1b\x99\x54\x68\x3d\x29\xd0\xfb\x92\x5c\x09\x8a\x4c\x21\x93\x4f\x1b\x91\x6a\x44\x3a\x5f\x3d\x87\xfc\xde\x42\x86\x5a\x3e\xbe\x3f\xd2\xeb\x29\x7e\x43\x39\x7a\x29\x42\x78\x0b\xc6\x69\xf0\x90\x69\xec\xc9\x05\x3a\x99\xf4\xeb\x02\x0c\x49\x81\x3f\x68\xa1\x39\x68\x2a\x8c\x4c\xba\x9b\xc1\x71\x67\xe5\xfd\xcf\xe7\x12\xd4\x98\x4c\xb1\x7d\x31\x9c\x97\x60\xf2\x23\x6c\x0c\x49\xeb\xc3\x0b\x55\xb2\xa3\x55\x97\x83\x6a\x5f\xc8\x8b\x3b\xcf\xda\xb8\xaf\xa5\xf7\xca\xb2\xd6\x98\x7f\x27\x93\xf3\xec\x8d\x7a\xbb\x35\xe5\x85\xb8\xb0\xc0\x07\x9c\xfb\x6f\x84\xb3\xd5\x46\xf3\xcf\x25\x9e\x24\xf3\x44\xa9\xc1\x9e\xe7\xb4\xc4\x6f\x47\xd7\x37\x51\x5a\xeb\x4f\x13\xd6\x0e\xed\xc4\xa9\xa8\x5d\xbc\x2e\x6a\x03\xcd\xb3\x7a\x62\xbe\xf3\xfc\x18\xf1\x84\x0b\x34\xc8\x3b\xc9\x5c\x9f\x99\xa8\x51\xd5\x55\x49\x27\x9c\xa3\x4c\x0c\x9b\x83\xf2\x40\x79\xaa\xc0\x63\xca\x26\x75\x64\x0a\x8d\xa9\xd2\xa4\xc6\xbb\xf4\x1e\xb0\x29\x7e\x97\xb2\x5f\x47\xbe\xe7\x86\xd8\x90\x1a\x96\x7b\x3d\xf5\x9e\xcd\x6a\x07\x67\xcb\xe7\x54\x33\xac\x2b\x0f\x09\xd9\x3e\xec\x6f\x19\x72\x31\xb4\x3c\x11\x03\xd2\x5b\x15\x9e\x5c\x91\x06\x55\x09\xa5\x5a\x54\x48\x15\xba\x34\xc7\x21\x4c\xb5\xdf\xb7\xc2\xe6\xd4\x10\x9b\x93\x23\x1c\xb8\x11\xf4\x77\x00\xe5\xa0\xc2\x46\x40\xdd\x43\x85\xc2\x73\x8b\x53\x8b\x13\x9b\x54\x71\xb9\x68\x84\x53\x9f\xcb\x45\x8d\x53\x5f\x53\x99\x31\xd8\xbc\x65\xea\x63\x30\xb5\x96\x66\x38\x75\x23\x9e\xa5\xb0\xeb\x3f\x56\xd8\x63\xd8\x67\x00\xc6\x12\x9c\x6f\x36\xdc\xee\xea\x15\x56\x3f\x97\x2d\x90\x2d\x90\x5b\x3c\x86\x7d\x06\x80\xac\x08\x67\x69\x39\xcd\xc6\xd8\x6c\x48\xd6\x07\x3b\x51\x1f\xdb\xff\x75\xe2\x6e\x9a\x69\x52\xe2\x0b\x2e\x5a\x30\x3f\x06\x98\xc7\xf1\xd5\x84\x23\x85\xd6\x7b\x66\x2d\xa2\x48\x3d\x5d\x02\x45\x64\x86\xdc\xc2\xf4\xfa\x17\x0f\x6f\x7e\xc9\x75\x79\xcc\xcd\xc3\x93\x8f\xb8\xf3\xec\x62\xf7\x57\x00\x00\x00\xff\xff\xe3\x51\xd9\xf0\x31\x16\x00\x00")

func uiCertEditorGladeBytes() ([]byte, error) {
	return bindataRead(
		_uiCertEditorGlade,
		"ui/cert-editor.glade",
	)
}

func uiCertEditorGlade() (*asset, error) {
	bytes, err := uiCertEditorGladeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ui/cert-editor.glade", size: 5681, mode: os.FileMode(420), modTime: time.Unix(1488138078, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _uiKeyEditorGlade = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x59\x5f\x6f\xe3\x36\x0c\x7f\xef\xa7\xd0\xf4\x3a\x24\x69\x6f\x18\xb0\x87\xc4\x87\x5d\x81\x1e\x86\xbb\x0d\x07\xb4\xdb\x1e\x0d\x5a\x66\x12\x2d\xb4\xa8\x49\x72\x52\x63\xd8\x77\x1f\x1c\x2f\xb8\xa6\x51\x5a\xdb\x6d\x73\x49\xd1\xb7\x02\x21\x65\xfe\xfe\x88\xa4\xdd\xf1\xfb\xdb\x82\xc4\x12\x9d\xd7\x6c\x26\xf2\x62\x78\x2e\x05\x1a\xc5\xb9\x36\xb3\x89\xfc\xfd\xe6\x6a\xf0\x93\x7c\x9f\x9c\x8d\xbf\x1b\x0c\xc4\x47\x34\xe8\x20\x60\x2e\x56\x3a\xcc\xc5\x8c\x20\x47\xf1\xc3\xf0\xdd\xf9\xf0\x5c\x0c\x06\xc9\xd9\x58\x9b\x80\x6e\x0a\x0a\x93\x33\x21\xc6\x0e\xff\x2e\xb5\x43\x2f\x48\x67\x13\x39\x0b\x8b\xef\xe5\xd7\x07\xd5\x69\x72\xb4\x8e\xe3\xec\x2f\x54\x41\x28\x02\xef\x27\xf2\x63\x58\xfc\x8a\xa6\x94\x42\xe7\x13\x59\xa0\x29\x2f\x64\x1d\x25\xc4\xd8\x3a\xb6\xe8\x42\x25\x0c\x14\x38\x91\x4b\xed\x75\x46\x28\x93\x1b\x57\xe2\x78\xb4\xf9\x35\x1e\xac\xc0\xa4\x53\x56\xa5\x97\xc9\x15\x90\xdf\x8d\x57\x73\x4d\x79\xf3\x77\xac\xa4\xcb\x39\xaa\x75\x5d\xbf\x04\x2c\x9a\xda\x54\xa1\x53\xc5\xb6\x92\x9b\xac\x8e\x25\xf6\x29\x33\x96\x63\x38\xf5\x73\x5e\xa5\x40\xd4\xfe\x41\x04\x19\x92\x14\xc1\x81\xf1\x04\x01\x32\xc2\x89\xac\xd0\xcb\xe4\x67\x22\x5e\x89\x4b\xb6\x55\x9b\x73\x4a\x8f\x69\x69\x72\x74\xa4\xcd\x5e\x9c\xe3\x51\xc3\xe7\xff\x54\x8f\xee\x70\xdd\x93\xf7\x1a\xf0\x2b\xe3\xfd\x7a\xce\x2b\xf1\x09\x23\xac\x3f\x81\xbe\x6b\xb4\xe0\x20\xb0\xdb\xa6\xd0\x17\x3a\x0d\x3c\x9b\x11\xfa\xd4\x6f\x42\x0e\xcb\xe7\x13\x40\x6d\x63\x29\x74\x4a\x0c\xf9\xb7\x76\xc3\x7e\x61\x3f\x33\xe4\x62\xea\xb8\x10\x57\x9a\x70\x38\x3c\x86\x6b\xb5\x43\xa1\x87\x25\x1e\x2f\x85\xd7\xb0\x44\x11\xf8\x88\x08\xdc\xbd\x58\x27\x7b\x7b\x8e\x61\x86\xed\x97\xbe\x1e\x44\xb5\xf4\x97\xa4\x6d\xc6\xe0\xf2\x37\xf5\xfb\xcd\xa2\x67\xb5\x0c\xba\x10\x98\x29\x5d\x60\x95\x6a\x33\xe5\x13\xc0\xdf\xc5\x74\x1b\x7c\x62\x30\x58\x60\x35\xa8\x11\x1e\x83\xed\xf6\xeb\x60\xcb\xec\xf5\x4b\xd1\x80\x3c\x90\x1a\x77\x7f\xd8\x55\xe2\x03\xdf\x36\x22\x38\xe6\x70\x90\xf7\x93\x7b\xf1\xec\x34\x9a\x00\x41\xb3\x91\xc9\x12\x5d\xd0\x0a\xe8\xb1\x24\x6f\x41\x69\x33\x93\xc9\x8f\x5d\x5f\x7f\x6a\xbc\x87\xf6\xd5\x56\x49\xf1\xb2\x3e\x37\xb6\xa9\x85\x58\x3b\x28\x0d\x95\xbd\xbb\xc6\xf4\x2a\xb6\x6f\xc1\xdd\x7c\xfd\xcf\x27\xac\xc4\x4d\x65\xf1\xdf\xf8\x59\xdb\xc6\xdc\x9c\x0e\x6a\xa1\xcd\xec\xe1\x67\xe2\xad\x05\x93\x77\x2c\x74\xaa\x1f\xba\xae\xb1\x0c\xcb\x5e\x37\xf6\x3b\xdf\x87\x60\xa7\xdc\xad\x6e\xd7\x5b\x64\x74\x6e\xeb\x6d\xe5\xc0\x2a\x9f\x90\x32\x17\x7d\x95\xb9\x8f\x71\x17\x5f\x67\x6c\xdd\x70\x75\x72\xdb\x3d\x3c\x9d\x67\xea\x87\x32\x84\xfa\xe8\x17\x69\x70\x6d\x53\x1c\x2a\xd4\x4b\xf4\x69\x8e\x53\x28\x29\x74\xe1\xc6\x96\x56\x26\xeb\x6f\x65\x2d\x3b\xa9\x25\x50\x38\x67\xca\xd1\x8d\x4e\xd1\x04\x11\x9c\x4f\x31\xc1\x6f\x1c\x30\x63\x5e\x34\x5d\xc6\x64\x87\xb6\x42\x8b\x2e\x78\xad\x1c\x13\x61\xfe\xa7\x36\xf9\xd6\xb7\xaf\x5e\x45\xf6\x2c\x34\x96\x36\xf7\xeb\xca\x32\x70\xa9\x65\xd2\xaa\x92\x09\xd0\x0a\x2a\xdf\xf6\x80\x65\xe7\x03\x76\xe8\x8a\x53\x76\x83\xb7\xe1\x0f\x8d\xab\x46\xd5\xb0\x4a\xa7\x65\xed\xb6\x7b\x79\x3d\xd9\x7b\x02\x83\xb1\x54\xcc\xf5\x7a\x3b\x78\x64\x38\xc4\x52\x0b\x36\x5c\x6f\x76\x8f\x16\x1c\x1b\x5c\x91\x99\x1c\x0b\xdc\x33\xb8\x45\xbd\x6f\x4d\x64\x80\x4c\xb6\x99\xe1\x27\xb1\x98\x5d\x95\x44\xf1\xef\xb0\xfb\x38\x6c\x37\xfc\x03\x64\x69\xd3\xee\x1e\xdc\x2d\x9e\x67\x67\x7a\xeb\x16\x62\x3f\x5d\x71\xca\x76\xba\x85\x05\x17\xde\xba\x45\x9f\x6e\xd1\xf6\x4a\x3c\xc3\xa2\xfa\x9a\x3b\xd1\x97\x32\x23\xad\xc4\x17\x70\xe1\xb9\x9b\xd1\xa3\xcc\xbf\x58\xff\xea\xbf\x54\xb6\x5d\xb8\xfa\xee\x94\xef\xba\xec\x94\x5f\x61\x8c\x47\x77\xfe\xeb\xfd\x5f\x00\x00\x00\xff\xff\xec\xe8\x43\xda\x4e\x1f\x00\x00")

func uiKeyEditorGladeBytes() ([]byte, error) {
	return bindataRead(
		_uiKeyEditorGlade,
		"ui/key-editor.glade",
	)
}

func uiKeyEditorGlade() (*asset, error) {
	bytes, err := uiKeyEditorGladeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ui/key-editor.glade", size: 8014, mode: os.FileMode(420), modTime: time.Unix(1488615081, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _uiLoginGlade = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xdc\x58\x4d\x6f\xe3\x36\x10\xbd\xe7\x57\xb0\xbc\x16\xfe\x48\xda\x02\x7b\x90\xb5\x40\xd0\x26\x28\xb0\x68\x0b\x74\x8b\xa2\x27\x81\xa2\xc6\xf2\x34\x34\x47\x25\x47\xfe\xd8\x5f\x5f\xc8\x4a\x36\xf6\x9a\xb2\x45\xdb\x35\xd2\xbd\x09\x22\x1f\x39\x9c\x79\x6f\x86\xc3\xe4\xfd\x6a\x6e\xc4\x02\x9c\x47\xb2\x13\x79\x3b\x1c\x4b\x01\x56\x53\x81\xb6\x9c\xc8\x3f\x3e\x3e\x0c\xde\xc9\xf7\xe9\x4d\xf2\xcd\x60\x20\x1e\xc1\x82\x53\x0c\x85\x58\x22\xcf\x44\x69\x54\x01\xe2\xbb\xe1\xdd\x78\x38\x16\x83\x41\x7a\x93\xa0\x65\x70\x53\xa5\x21\xbd\x11\x22\x71\xf0\x4f\x8d\x0e\xbc\x30\x98\x4f\x64\xc9\x4f\xdf\xca\xd7\x8d\x1a\x98\x1c\x6d\xe6\x51\xfe\x37\x68\x16\xda\x28\xef\x27\xf2\x91\x9f\xfe\x44\x5b\xd0\x52\x0a\x2c\x26\xd2\x11\xb1\x6c\xa6\x09\x91\x54\x8e\x2a\x70\xbc\x16\x56\xcd\x61\x22\xb5\xb2\xd9\x94\x74\xed\x65\xfa\xa0\x8c\x87\x64\xf4\x32\x21\x3c\x9f\x91\x0d\x48\xc1\x4e\x59\x6f\x14\xab\xdc\xc0\x44\xae\xc1\xcb\xf4\x03\x95\x68\x8f\xc1\x1d\x78\xfc\xd4\x80\x7a\x6e\xb7\xdc\x9c\x22\xab\xc8\x23\x23\x59\x99\x6a\x68\xdc\x73\x0c\x56\xc0\x54\xd5\x86\xb3\x25\x16\x3c\x93\xe9\xbb\xf1\xb8\x2f\x62\x06\x58\xce\x58\xa6\x77\xc7\x21\xa5\x53\x0b\xe4\x75\xa7\x4d\x7a\x86\xa6\x68\xbf\x43\x01\xba\xa7\x95\x7c\x19\xdd\x5f\x7c\x81\x1e\x37\x6e\xfa\xe8\xea\x3d\x2f\x9d\x12\xc8\x10\x66\xae\x5c\x89\x36\x33\x30\x65\x99\xfe\x10\x81\x70\xad\x93\x62\x20\x4c\x55\x1c\x20\x27\x66\x9a\xf7\xc4\x90\x43\xb0\xac\x5a\x8e\x2c\xc0\x31\x6a\x65\xfa\x00\x7d\xa5\x34\xda\xb2\x6b\x9b\x9d\x18\x86\xe3\xf8\x41\xe5\x60\xe4\xf6\x9c\x13\xa2\x79\x6a\x44\x43\x38\xb3\x31\xa8\x43\xa2\xe2\x67\xcb\x24\xfe\xa2\xda\x89\x1f\x7f\x01\x16\xbf\x33\x39\x55\xf6\x5e\x7b\xa5\x0c\x96\x56\xa6\x7b\xe2\xf8\x0c\x50\xcc\x0e\xf3\x9a\xc1\xef\x0e\x6c\x0f\xbd\x88\xbb\xd5\x9a\x58\x28\x53\xc3\x44\xe6\x64\x8a\x36\x9b\x1d\x44\x79\xfc\x04\x9f\x31\xb7\xdf\x8f\xc7\xe3\x2f\x41\xc9\x28\x6c\x44\x32\x6a\x83\xb7\xf3\xaf\x52\xfa\x09\x6d\x79\xf8\xd8\xb0\xaa\x94\x2d\x22\xe3\x30\x45\x63\xe2\x22\xfe\x9a\xe6\x3a\xfc\x9b\x8c\xf6\xcc\x4d\x46\x5f\x70\xb4\x0f\x67\x1f\x1d\x16\x6f\x89\xb2\x8e\x96\xd9\x61\x25\x06\x77\x23\x53\xcf\x6d\x1f\xe0\x9e\x4b\xc2\x6e\x09\x49\xf9\x64\xdf\x9c\xe3\x9f\x10\xb6\x5b\xd6\xcf\x1a\x16\x0f\x68\xa2\x56\x3c\x2a\xe6\xb0\x64\x44\xa7\x6c\x82\x66\xc3\x94\x33\xc5\xac\xf4\xec\xe0\x4e\x81\xab\x06\x55\x7d\x80\x01\x4d\x88\x90\x2e\xc4\xd7\x4f\x84\xdf\x94\xf7\x4b\x72\xc5\x57\x4a\x82\xdb\xeb\x92\xe0\x27\xcb\x6e\xdd\x5e\xa0\xa1\xf9\xcc\x1a\x8b\xae\x44\x8a\x53\xa0\xcf\x57\xd8\x78\x30\x13\x19\xc6\x2a\x63\x58\x71\x38\xc1\x80\x69\x5c\x63\xc9\x0e\x60\x85\x9e\xd1\x96\x82\x49\x68\x07\xaa\x29\xcb\xb0\x8c\xd9\x6d\xf6\x52\x4c\x63\xcd\xac\x1c\xce\x95\x5b\x67\xa8\xc9\x66\x4a\x33\x2e\x5a\x23\x4f\x90\x90\x07\x4d\xb6\xb8\xd0\x62\x3b\x76\x79\xb0\x4d\x0d\x5f\x5c\xc0\xaa\x73\x96\xda\xb1\xa9\x6f\x7c\x0f\xd7\x8f\x0b\x67\x81\x03\x62\x7e\x53\xa5\x60\x2f\x0b\x54\xcf\x49\xf6\xbf\xcc\x04\xe7\x84\xfe\x8c\x2c\x72\xb2\x34\x37\x07\x45\xb3\xe9\x86\xe3\xb9\x6a\x94\x86\x19\x99\x02\x5c\x37\x45\x2d\xb1\xc0\x79\x65\x70\xde\x34\xdb\x85\x58\x03\xbf\x7d\xaa\x46\x01\x9f\xdf\x2a\xee\xae\x4b\xef\xfb\x9a\x99\x6c\xcb\xef\x7c\xf3\x9d\xe5\x8e\x96\x1e\x32\xdf\xde\x2a\x7b\xd0\xbc\xfb\x42\x72\xbf\x59\x6a\x38\x8c\xe6\xd2\x95\xcb\xa7\x03\x0d\xb8\x00\xdf\xb7\x86\x5e\x98\x60\x07\x62\x7e\x85\x5c\x78\x7e\x5b\x1c\xd3\x22\xb6\x5d\x71\x54\x77\xf8\xda\x16\x77\x08\xea\x52\x6d\x71\x40\x0c\x54\x81\x3d\xd2\x29\x77\xd3\xff\xd7\x0a\xf6\x5e\x44\xbb\x56\x39\xb7\xdf\x8e\x81\xc5\xd0\xfd\x7f\xf4\x68\xd2\x21\xa3\xe3\xec\xd8\x3d\xe3\xd6\xe0\xeb\x40\x32\xda\x7a\x97\xff\x37\x00\x00\xff\xff\x7f\x81\xfe\xb5\xf0\x17\x00\x00")

func uiLoginGladeBytes() ([]byte, error) {
	return bindataRead(
		_uiLoginGlade,
		"ui/login.glade",
	)
}

func uiLoginGlade() (*asset, error) {
	bytes, err := uiLoginGladeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ui/login.glade", size: 6128, mode: os.FileMode(420), modTime: time.Unix(1487446934, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _uiMainGlade = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x5d\x5d\x73\xdb\xba\xd1\xbe\xd7\xaf\xc0\xcb\x9b\x5c\xbc\xe3\x8f\xe4\xb4\x69\xa7\x63\xe9\x8c\xd3\x7c\x34\x93\xd3\xd4\x13\x27\x3d\xed\x15\x07\x24\x57\x12\x6a\x08\x60\x40\x50\xb2\xfa\xeb\x3b\x94\x64\x59\xb2\x40\x10\xa4\x48\x8a\x92\xf6\xce\x1e\x71\x97\xd8\xc5\xee\x83\xc5\xee\x02\xbc\xf9\xf5\x71\xc2\xc9\x14\x54\xc2\xa4\xe8\x7b\xaf\x2f\xaf\x3d\x02\x22\x94\x11\x13\xa3\xbe\xf7\xe3\xfb\xc7\x8b\x3f\x7b\xbf\x0e\x7a\x37\xff\x77\x71\x41\x3e\x81\x00\x45\x35\x44\x64\xc6\xf4\x98\x8c\x38\x8d\x80\xfc\x72\xf9\xe6\xfa\xf2\x9a\x5c\x5c\x0c\x7a\x37\x4c\x68\x50\x43\x1a\xc2\xa0\x47\xc8\x8d\x82\x9f\x29\x53\x90\x10\xce\x82\xbe\x37\xd2\x0f\xff\xef\x3d\xbf\x28\x23\xf3\xae\x16\xcf\xc9\xe0\x3f\x10\x6a\x12\x72\x9a\x24\x7d\xef\x93\x7e\xf8\x3b\x88\xd4\x23\x2c\xea\x7b\x13\x10\xe9\x6b\x2f\x7b\x8a\x90\x9b\x58\xc9\x18\x94\x9e\x13\x41\x27\xd0\xf7\xa6\x2c\x61\x01\x07\x6f\xf0\x5d\xa5\x70\x73\xf5\xf4\xab\xf9\xe1\x90\x0a\x7f\x28\xc3\x34\xf1\x06\x1f\x29\x4f\x76\x9f\x0f\xc7\x8c\x47\xcb\xbf\xf3\x86\xf4\x59\xc3\x64\x35\x2c\xe6\x27\x5a\x2a\x3a\x02\xef\x89\xa4\xe4\xf8\xaa\x8c\xd1\x44\xc3\x69\x00\xdc\x23\x5a\x51\x91\x70\xaa\x69\xc0\xa1\xef\xcd\x21\xf1\x06\xf7\xcb\x01\xba\x30\x49\x13\xf0\x53\x11\x81\xe2\x4c\xe4\x8e\xf7\xe6\x6a\xa9\x94\x95\xbe\xae\x36\x14\x56\xa4\xbc\x7b\x88\xa9\xa2\x5a\xaa\xb5\x16\x5b\xd5\xda\x1e\x23\xdf\x99\x76\x01\x7a\x26\xd5\x43\xd2\xdd\x79\xff\xba\x1a\x61\x17\x26\x7e\xd7\x6b\x40\x4d\x59\x08\x1d\x56\xdf\xfd\x6a\x84\x5d\x50\xdf\x09\xf9\xcd\x03\xcc\x3b\x3c\xe9\x5f\x60\xde\x89\x09\xdf\x51\x5b\x08\x4a\x2b\xf8\xd9\x61\xd5\xfd\x15\x94\x26\xdf\xe0\x67\x77\xf5\xd7\x71\xe5\x75\x42\x71\x27\x84\x34\x34\x90\xa9\xee\xee\x94\xdf\x66\xc3\x23\xef\xbf\x82\x6e\x7e\xde\x37\x7f\xd8\xd5\xdc\xef\x4c\x44\x72\xb6\xd4\x9b\x92\x52\xe7\x84\xd9\xfb\x46\xce\xef\xe4\xe3\xa1\x67\x43\x2a\x06\x42\x53\xcd\xa4\xf0\x06\x53\x50\x9a\x85\x94\x1b\x09\xb7\x64\x31\xcb\xf3\x37\xa0\x11\xa8\x77\x54\x79\x9b\xcf\x55\x90\xac\xaa\x74\x26\x3a\xcd\x74\xf6\xaa\x3c\xb3\x32\x91\x24\x69\xb0\xa2\x0a\xe6\xe4\x56\xb0\x49\x9a\xdc\x7d\xf8\xd7\x8f\xfb\x5c\xfa\x1d\xdd\x98\xf5\xf3\x5d\x8e\x46\x1c\xde\xa5\x5a\x4b\xb1\x34\xae\x60\xf1\xb7\x2f\xc5\xd2\x88\x5f\x70\xa8\xa8\xb9\x02\xed\x95\x25\x55\x10\x02\x9b\x42\xe2\x47\x30\xa4\x29\xd7\x0e\x1c\x8c\xfa\x30\xeb\xe4\xf3\x64\x7b\xab\x58\x8b\xf4\x05\x1a\xb0\xda\x4f\x1e\x7d\xa2\x65\xf8\xe0\x0d\x46\xfa\xe1\x62\x6e\x8e\x81\x37\x68\xb7\x60\x67\xfb\x17\xb3\xad\x18\x09\x8c\x0f\xbb\x1a\xdb\x7a\xdd\x6a\xc9\xac\x0a\x94\x9a\xa7\x92\x9b\x98\x86\x0f\x4c\x8c\x8a\xdf\x15\xcb\x84\x2d\x71\xea\xb5\xed\x35\x46\x7e\x7b\x69\x32\x5b\x47\x57\x4e\x7b\x32\x1e\xba\xa3\xdb\x38\x8d\xbd\xc1\x22\xa7\x74\xce\x9e\x1d\x2b\x18\x82\x02\x91\xb3\xcb\xdd\xe0\x51\x8f\x87\x57\xb3\xff\x37\xed\xda\xff\x33\x92\x6c\xae\x59\x63\x39\x01\x3f\x81\xb8\x1b\xf0\xb2\x4b\x2b\xa4\x9f\x8c\xe5\xcc\xa7\x9c\x17\xbd\xb8\xce\xb9\xf9\xa5\xdd\xb9\x31\x04\x13\xd9\xc4\x9c\x2c\x50\x95\x98\xd5\xd3\x47\xab\x6c\xa6\x3b\x0c\x53\x7f\xa8\xc3\x15\x4c\x03\x32\x0f\xe6\xe5\x40\xe0\x31\xa6\x22\x2a\xb9\x5b\x18\xb2\x22\xc3\xca\x97\xf7\xda\x4c\x62\x90\x75\x47\x4e\x97\xdd\xd5\x57\xa9\x21\x90\xf2\x61\xe9\xec\x62\xf5\x9f\x3f\xa1\xec\x65\x5c\x52\xf7\x7e\xab\x0c\xd9\xc2\x3b\x03\xa9\x22\x50\x25\x55\x9f\x84\x4a\x72\x4e\x8b\x07\xea\x0a\x8d\x5b\xbb\xeb\xbd\x74\x53\xa0\x9f\xd2\x6b\xd3\x84\xaa\x11\x13\x3e\x87\xa1\xf6\x06\x7f\xac\x40\xa9\xd8\x68\x5c\x91\x54\xcb\xb8\x1a\x61\x20\xb5\x96\x93\x92\xb4\xce\xf9\x05\xfb\xec\x9a\x67\xf8\x68\x30\x7b\x4e\x39\x1b\xd9\x37\x2e\x66\xc2\x0d\xb0\x5f\x95\xd7\xca\x72\x60\xa1\x14\x7e\xc2\xfe\x0b\xde\xe0\x6d\xd5\xb5\xc2\x06\xff\xa6\x77\x3e\x21\x6f\x15\x55\x17\x03\x70\x1e\x65\x21\x10\x3f\x0b\x9a\xbf\x98\x99\x57\xc5\x72\x66\xf9\xdb\x22\xc3\x79\x04\x66\x99\x9f\x8a\xb5\x65\xcb\xd6\xdc\xa8\xd6\x8a\x05\xa9\x86\xc4\xfc\xc0\xe6\x23\x4f\xf6\x9c\x19\x22\x99\x52\x9e\x42\xdf\x7b\x73\x7d\x7d\xbd\x6a\x74\x30\x90\x5e\xd9\xd9\xd7\x6f\xad\x95\x54\x58\x87\xb9\x16\xa0\x02\x9a\x6b\xa1\xb9\x4e\xaf\x2f\x0b\x7c\x3e\x1f\x93\x8b\x09\xf7\xb5\xf3\xd7\x6f\x3a\x65\xe7\x87\x42\x65\x4b\xd6\x82\x54\x32\xf3\xd2\x49\x53\xa2\xe7\x31\xf4\x3d\x4d\x83\x1d\x73\x77\x77\x8b\x4e\x04\x90\x55\x91\x7b\xff\xed\x9d\xa6\x81\xbf\xb4\x86\xc2\x84\x6f\x03\xd9\x0e\x0c\xe9\x8f\x31\xa4\x7f\x19\xd4\xc6\x34\x64\x62\x54\xf4\xda\xf3\x5a\xc2\x2c\x3d\x89\x36\x86\x8f\x4d\xae\x62\x33\x58\xd8\xe4\xd3\x3a\x16\x48\x1e\xe5\x2d\x63\x06\xea\xe7\xe2\xfc\x13\x83\x4c\xe3\x25\x18\x6c\x2f\xa2\x6f\x3b\xb5\x88\x1e\x2c\x58\x3c\xf0\xde\xc6\x8c\xc0\xa6\x21\x1f\xd4\xcf\x4a\x63\x94\x89\x89\x1b\x4e\xd9\x35\x68\xd6\xa2\x0d\xaf\xf6\xd6\x65\x1d\xfa\x34\xf1\xc8\xc7\xae\x6f\xf0\x05\xe6\xc5\x2c\x6d\x5e\x48\x0a\x3d\xd1\x34\xa4\x32\x21\xad\x89\xde\xdd\x21\x4d\xd4\xce\x3b\x38\x62\x77\x4c\x62\x73\x4e\x52\xc1\xbc\x3e\x08\xad\xe6\x07\x32\x2f\x37\x16\x5d\x35\x85\xca\xce\xe1\xbc\xcd\x21\x2d\xdb\x42\x6e\xe3\x42\x9e\x24\xf9\x6e\xbe\xac\x2f\x56\xd1\x4e\xfb\x06\x56\x47\xed\x71\xc5\xe7\x74\x4d\xd5\x52\xab\x7e\x96\xbe\xaa\xa9\x9e\x4e\xe2\xa2\xf6\xfc\x5c\x67\x7b\xa1\xce\x21\x41\x52\xb8\xd1\x6a\x69\x76\x30\xb5\x82\xa9\x15\x4c\xad\xb4\x91\x5a\xc9\x3b\xc2\x64\xe3\x86\x79\x15\x82\x79\x95\x2d\x49\x9b\xcf\xab\x2c\x9b\xf8\xe4\xe3\xcb\x13\x81\x36\x01\x0e\xdb\x8a\xd6\x58\x82\x24\x3f\xcd\xb4\xb7\x12\xea\x50\x84\x89\x47\xa5\x94\xd3\x7e\x5a\x2d\xd6\xac\x59\xbb\xb6\xbe\x99\xbc\x51\x95\xd6\xb1\x89\x49\x15\x3d\x9b\xf8\x68\x29\xb9\x66\xb1\xaf\xe1\x51\x1b\x21\xff\x4e\xb1\x29\xd5\x40\xbe\xc0\x9c\x50\xae\x80\x46\x73\x12\x4a\xa1\x29\x13\xe4\xb3\x7e\x95\x90\x8d\x07\x2e\x7b\xbd\x7b\xb9\x38\x76\x46\x3e\x81\xd6\x4c\x8c\xc8\x5d\x1a\x70\x16\x2e\xa8\xbf\x65\x50\x4d\x86\x4a\x4e\xd6\x34\x52\xc0\x65\xaf\xf7\x23\x81\xf5\xad\x0f\x64\xb9\x35\x26\x6c\x48\xfe\x2d\x53\x22\x00\x22\xa2\x25\x09\x15\x64\x3f\x52\x22\x60\xb6\x60\x76\x47\x99\xba\xec\xf5\xde\x4b\x22\xa4\x26\x43\xa9\x46\xa0\x17\x0f\x72\x16\x3e\x90\x57\xf7\x74\x0a\xd9\xbf\xef\xdf\xbd\x5a\x71\xfc\x0b\x91\x82\xcf\x89\x1e\xb3\x24\x7b\x2d\x49\xe8\x14\x12\x92\xe1\xc3\xf2\x39\x22\xc5\xf2\xc7\x98\x8e\xe0\xb2\xaa\x3a\x37\x5b\x4a\x81\xc7\x55\xd9\xb8\xb7\x1a\xad\x39\x14\xec\xad\x89\xd3\xfe\xda\x34\x96\x52\xeb\x49\x1e\x93\x72\xe9\x41\x13\x07\xe7\xf5\xe5\x59\x23\xc5\xe9\x04\x5b\x7a\x88\x54\x84\x04\x43\x1f\xf9\x68\x65\xdc\xbe\x9c\x89\x6c\x49\xf2\x63\xca\x4c\x87\x89\x6c\xf2\xe7\x07\x65\x4f\xae\x53\x55\xb3\x75\xe3\xd1\x3e\x6c\xaa\xa6\x96\xc8\x79\xb9\x80\x43\x96\x9c\x74\xcb\x05\x20\x62\xba\x19\xf3\xff\x10\xb1\xc2\x06\xbb\x3c\xae\x68\xfa\x45\xa3\xea\x9c\xe9\x3b\x14\x05\x48\xb7\x4c\x3f\x8b\x34\x9a\x31\xfd\xe7\x28\x07\x1d\xe0\x6c\x1c\xc0\xa1\xd4\x40\xba\xe5\x00\x5c\xd2\xa8\x19\x07\xf8\x4d\xd2\x68\xb9\xa3\x40\x17\x38\x23\x17\xb0\x1c\x87\xdb\xd6\xc8\xbe\x2e\xd0\x5c\xc5\xb2\x72\x72\xa4\xae\x46\x0b\x87\x5d\x14\x56\x2c\x3b\x5e\xb1\xac\xf5\xf4\xfa\x39\x54\x2c\xed\xf5\x8b\x96\xa6\x06\xcb\x95\xae\xb4\x58\xae\xcc\x67\x70\x5e\x85\xc7\xa7\x0b\x00\x53\x48\xcc\x77\xd9\xd9\xd8\x62\x05\x72\x41\x8a\x15\xc8\xb5\xa4\xb5\x56\x20\x63\x4e\x43\x18\x4b\x1e\x81\x32\xa8\xbe\x85\x30\xa0\xd6\x8b\x52\xce\x21\x0c\xb0\x5e\x27\xda\xea\xfc\x60\x2c\x80\xb1\x00\xb6\x2e\xb5\x15\x41\xb0\x21\x0b\xa9\x2e\xba\x90\x0c\x03\x08\x0c\x20\x0e\xdb\xc2\xb4\xbe\x9f\xa8\x5d\x8f\x73\x22\xc7\xf6\xa3\x7d\xd2\xe5\xf6\x58\x71\xfd\x58\x0d\x89\xf9\x23\x7b\x93\x3d\xd3\xea\x70\x8e\xc7\x12\xb7\xae\x1f\x3c\xf5\xd3\x83\xff\x98\x39\x9c\x29\xaa\x3f\xa7\xed\x1c\xb2\x3e\x0f\xa1\xc5\x53\x5b\x08\x40\x5b\xaf\x3a\x2e\x58\xe8\x0a\x00\x55\x71\x8b\x96\x0f\xb5\x22\x00\x2e\x00\x90\xdc\x0a\x29\xe6\x13\x99\x16\x46\xf9\x07\x9f\x73\x44\x52\x1b\x03\x44\xd2\x23\x7d\x53\x93\x5e\xd5\xca\x91\x70\x44\x52\x6f\xf0\x31\xf3\x9c\x28\x79\x75\x58\x10\x75\x6a\xf6\x43\x10\xcd\x67\x80\x20\x7a\xa4\x6f\x6a\xd2\xab\x1a\xbd\xac\x00\x41\x74\x23\x1c\xd5\x63\x50\x87\x45\x50\xa7\x6e\xd1\x03\x22\x28\x76\x8a\x1d\xcf\x07\x04\xce\xad\x44\xdc\x52\x79\xd8\xda\xcd\x8a\xe5\x61\x2c\x0f\x63\x79\xb8\xf9\xf2\xb0\xed\x83\xd6\x36\x8e\x58\x1a\x5e\x90\x62\x69\x78\x2d\x69\xb3\xa5\xe1\x4f\x8a\x45\xc7\xe0\x69\x4a\xce\xfc\x12\x97\x5a\xbc\x7c\xbb\xe4\xe9\x44\xec\xcf\x60\x2c\x27\x72\x04\x02\x64\x63\xe5\xed\xc5\x09\xa7\x23\xdc\xd4\x97\xbc\x1a\x63\x07\x47\xe7\x32\xd5\x7e\xa2\xe7\x99\x1c\x49\xac\x80\x46\x35\x65\x04\xec\x9f\x7a\xb5\x91\x96\x81\xfb\xdb\x50\xb3\x29\x9e\x98\x6f\xfc\xc8\xd8\x3e\x92\x9d\xdf\x9d\x11\x75\x59\x37\x1e\x89\x3f\x27\xdb\x3e\x8e\xcb\x20\xea\xb2\xed\xf7\xc0\x01\xef\x3a\x39\x1f\xeb\x6e\xed\xbe\x87\xfa\xb3\xb0\x1c\x86\xda\xa7\x5a\xd3\x70\xec\xb8\x02\xed\x64\x7b\x64\xbc\x66\xd0\xc9\xdb\xb0\x31\xf2\x6d\x30\xf2\xad\x3b\xe6\x8d\xa2\xcb\xca\x17\x9b\x21\x70\x16\x8d\xaa\x6b\xc0\xd9\x5a\xc8\xdb\x30\x70\x56\x6b\xa4\xea\x2e\x70\x9e\x58\x8d\xf3\x36\x8a\xc0\x0d\x01\xab\x66\x4e\x89\x5b\xf6\x94\xec\x9d\x41\x2d\xce\x63\x92\x23\x88\x13\x1a\xbd\xd8\xe3\xec\xcd\xfd\x4e\x26\x8b\xf1\xa1\xc5\x6f\xca\x79\x58\x80\xef\x98\xc5\xdf\x2f\xbe\xbe\x0e\xd1\xef\x4c\x44\x72\xd6\xe9\x8f\x07\x19\xa2\xe3\x31\x8d\xe4\xcc\xd7\xf3\x18\xbc\x01\x73\xfb\x44\x4d\x95\xa4\xae\x02\xf8\x27\x03\x9b\x76\x6a\xd1\x50\x4d\x5a\x32\x8e\xa5\x52\xc0\xb7\x6c\xa0\x60\x42\x83\x12\x94\x5f\x2c\xfe\xed\x7b\x09\x70\x08\x97\x61\x9b\x95\x3c\x4f\x95\xf7\x6b\x7a\x8b\xab\x13\x97\x0c\x8f\x4b\x84\x7c\xe4\x1b\xe9\x8e\x7d\x62\xec\xa8\xe1\xa2\xb4\x13\x20\xde\x20\x54\xb8\x33\x38\x74\x64\xd1\x28\x54\x60\xeb\x63\x2b\xad\x8f\x96\x34\x1f\xb6\x3e\x56\x6b\x85\x6a\x69\x7a\xb0\xfb\xd1\x95\x16\xbb\x1f\x9d\x19\x60\xf7\xa3\xe9\x22\x71\x50\x53\x16\xe2\xc5\x38\xd8\xfd\x68\xa4\xc4\xee\x47\xec\x7e\xc4\x1a\x30\x76\x3f\x76\x60\x53\xfc\xd2\xd1\xb0\x14\x9c\xcb\x01\xbb\x1f\xd1\xb6\x4f\xdf\xb6\xb1\xfb\xd1\x9d\x2f\x5a\x77\xd1\xa8\xba\x66\xdd\xd8\xfd\xd8\xcd\x26\x1e\x8c\x7c\xb1\xfb\x11\x81\xb3\xc3\xc0\x89\xdd\x8f\xdd\x04\xce\x13\x6b\x07\xc3\xee\xc7\x1d\x39\xb1\xfb\xf1\x74\xcd\x1d\xbb\x1f\x4d\x72\x62\xf7\xe3\xa9\xb4\x33\x61\x37\x92\xf3\x58\xb0\xfb\xb1\x1a\x83\x43\x2f\x90\xd8\xfd\x88\xdd\x8f\xae\xe2\x61\xf7\xe3\x31\x43\x05\x76\x3f\x16\xd3\x9e\x7c\xf7\xe3\x5b\xec\x7e\x34\xd1\xee\xd3\x0a\xd5\xd2\xf4\x60\xf7\xa3\x2b\x6d\xa3\x1f\xcf\xed\xf2\xb7\xb8\x0c\xf6\x11\xcb\xc4\x1b\x64\xcb\x40\x59\xe2\x64\x2c\x67\x7e\x20\x55\x04\xca\x29\x75\x70\x3a\xf8\x5d\x7b\x4f\x5b\x9d\x00\xf1\x27\xc4\x6f\x13\xad\xe5\xe2\xde\x34\xd1\x72\xd2\x0e\x7a\x5b\x26\xa7\x15\xf4\x36\xc9\x62\x96\xa3\x8a\xcf\x95\xf7\xb5\xd2\x31\x92\x41\xd4\x17\x62\x6e\x8b\xb8\xf5\xe3\xb6\x4d\x33\xcd\x21\xa0\x6a\x6d\xb0\x86\x6b\xf8\x37\xa8\x9f\xd9\xde\x5c\x2d\xf6\x18\x43\x1a\xc2\xa0\xf7\xbf\x00\x00\x00\xff\xff\x38\xcc\xc8\x28\xa8\xd4\x00\x00")

func uiMainGladeBytes() ([]byte, error) {
	return bindataRead(
		_uiMainGlade,
		"ui/main.glade",
	)
}

func uiMainGlade() (*asset, error) {
	bytes, err := uiMainGladeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ui/main.glade", size: 54440, mode: os.FileMode(420), modTime: time.Unix(1488483293, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _uiPageKeyGlade = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd4\x56\x4d\x6f\xd3\x40\x10\xbd\xf7\x57\x0c\x7b\x45\x89\x53\x10\x12\x07\xdb\x95\x38\xb4\x07\x24\xc4\xa1\x88\x63\x34\x5e\x4f\x9c\x21\x9b\x5d\xb3\x3b\x76\xe2\x7f\x8f\x42\x14\xb5\x8d\x37\x8d\x6d\xf5\x00\xb7\x28\xf3\xde\xcc\xbe\x37\x1f\x72\x7a\xb7\xdf\x1a\x68\xc9\x07\x76\x36\x53\xb7\xf3\x85\x02\xb2\xda\x95\x6c\xab\x4c\xfd\x78\xbc\x9f\x7d\x56\x77\xf9\x4d\xfa\x6e\x36\x83\x07\xb2\xe4\x51\xa8\x84\x1d\xcb\x1a\x2a\x83\x25\xc1\xc7\xf9\x87\xc5\x7c\x01\xb3\x59\x7e\x93\xb2\x15\xf2\x2b\xd4\x94\xdf\x00\xa4\x9e\x7e\x37\xec\x29\x80\xe1\x22\x53\x95\x6c\xde\xab\xa7\x42\x07\x9a\x4a\xfe\xe2\x5c\xf1\x8b\xb4\x80\x36\x18\x42\xa6\x1e\x64\xf3\x93\x6d\xe9\x76\xea\x10\x04\x48\x6b\xef\x6a\xf2\xd2\x81\xc5\x2d\x65\x4a\xa3\x5d\xae\x9c\x6e\x82\xca\xef\xd1\x04\x4a\x93\x13\x20\x8e\xdf\xa2\xaf\xd8\x2e\x0d\xad\x44\xe5\x9f\x06\xa2\x3d\x57\xeb\x11\x70\x71\xf5\x70\x70\xe1\x44\xdc\x36\x86\xd7\x6b\x36\xe5\xf1\x77\xcc\x96\x2f\x6e\xaf\x4e\xd1\x7e\xf6\x96\x03\x17\x86\x54\xfe\xe8\x9b\x9e\x29\x53\x8c\x8c\x71\x42\x8d\x9a\x6d\x15\x79\x7c\x5f\xc0\x10\x11\x93\x84\x4c\x15\x13\xe3\xad\x69\x5f\xa3\x2d\xc7\x15\x6b\xa7\x90\x5e\xb7\x2e\x6e\xdf\x31\x8f\x41\x4d\x6b\x67\x4a\xf2\xc9\x19\x21\x89\x30\xde\x22\x4b\x9a\x1c\xfb\xf6\xe2\xbf\x1a\xf5\x86\x6d\xf5\xba\xca\x93\x33\xa3\x9a\xb0\x62\x63\xc6\x99\x59\xbb\xc0\xc2\xce\xaa\x7c\x11\xa7\xa4\x49\xef\xb9\x3d\x9d\x83\xc6\xb5\x11\x71\xf6\x1f\x1b\x5a\xe7\x99\xac\xe0\xd1\x80\x96\xbc\xb0\x46\xf3\x86\x73\x78\xc6\x30\xd8\xb9\x46\x96\x41\xba\x83\xc0\x20\xe8\x65\xe4\x08\x5f\xb0\x55\x9d\x03\x63\xb5\x0b\x32\x0a\xc4\xa3\x0d\x06\x05\x0b\x43\x99\xea\x28\xa8\xfc\x1b\xed\xe0\x2b\x75\xf0\x1d\xd9\x5f\x7a\xce\xe4\x4e\x5d\xe9\xd6\x58\xaa\x27\x4d\xdc\x52\x58\x96\xb4\xc2\xc6\xc8\xb5\x0c\xb1\xfd\x83\x8b\x3b\x18\xab\x38\xe4\x42\xc5\x78\xd7\x57\x31\xc6\xba\xba\x8e\x10\x5f\x49\xf8\xef\xcf\xcf\xed\xd4\xf3\xf3\x52\xe3\xb3\xe0\x53\x20\x4d\x9e\x7d\x4f\xfd\x09\x00\x00\xff\xff\x9a\x6a\xf5\x6f\xa8\x09\x00\x00")

func uiPageKeyGladeBytes() ([]byte, error) {
	return bindataRead(
		_uiPageKeyGlade,
		"ui/page-key.glade",
	)
}

func uiPageKeyGlade() (*asset, error) {
	bytes, err := uiPageKeyGladeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ui/page-key.glade", size: 2472, mode: os.FileMode(420), modTime: time.Unix(1486566727, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _uiTextViewGlade = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x97\x4d\x6e\xdb\x30\x10\x85\xf7\x39\x05\xcb\x6d\xe1\x9f\xb4\x68\xd1\x85\xa4\x00\x29\x90\x1c\x20\x6e\xbb\x34\x68\x72\x2c\x4d\x43\x73\x54\x72\x2c\x3b\xb7\x2f\x6c\x25\x48\x1c\x51\x91\x64\x15\x68\x17\xdd\x09\xe0\x3c\x0f\x1f\xe7\x7d\x24\x9c\x5c\xed\x37\x56\x54\xe0\x03\x92\x4b\xe5\xe5\x74\x2e\x05\x38\x4d\x06\x5d\x9e\xca\x6f\x8b\x9b\xc9\x17\x79\x95\x5d\x24\xef\x26\x13\x71\x0b\x0e\xbc\x62\x30\x62\x87\x5c\x88\xdc\x2a\x03\xe2\xe3\xf4\xc3\x7c\x3a\x17\x93\x49\x76\x91\xa0\x63\xf0\x6b\xa5\x21\xbb\x10\x22\xf1\xf0\x6b\x8b\x1e\x82\xb0\xb8\x4a\x65\xce\xf7\xef\xe5\x73\xa3\x83\x4c\xce\x8e\x75\xb4\xfa\x09\x9a\x85\xb6\x2a\x84\x54\xde\xf2\xfd\x0f\x74\x86\x76\x52\xa0\x49\xa5\x27\x62\x79\x28\x13\x22\x29\x3d\x95\xe0\xf9\x41\x38\xb5\x81\x54\x6a\xe5\x96\x6b\xd2\xdb\x20\xb3\x1b\x65\x03\x24\xb3\xa7\x82\x78\xbd\x81\xb5\xda\x5a\x5e\xee\xd0\x70\x21\xb3\xcf\xf3\x79\x5f\x45\x01\x98\x17\x1c\x97\xe8\x02\xad\xa9\xbf\x63\x5e\xae\x69\x2f\x9f\x56\x9b\x0d\x2a\x0c\xb8\xb2\x20\xb3\x85\xdf\x36\xf6\x7f\x8e\xe7\x98\x66\xa3\x7c\x8e\x6e\x69\x61\xcd\x32\xfb\x34\x40\xe1\x6b\xd7\x43\x24\x4c\xe5\x30\xc1\x8a\x98\x69\xd3\x53\x43\x1e\xc1\xb1\x62\x24\x27\xb3\x0a\x3c\xa3\x56\xb6\x8f\x30\x94\x4a\xa3\xcb\xdb\xda\x9c\xcc\x30\x3e\xc7\x3b\xed\xc9\x5a\x30\x8f\xd9\x7c\x59\x7c\xc6\x58\x3b\x46\x3b\x44\x16\x0a\x65\x68\xb7\xe4\x87\x12\x64\x86\xae\x55\xd6\xf0\x18\xf7\xb9\x80\x3d\x7f\x47\x78\xa4\x8f\x5f\x3b\x3d\xdb\xed\x08\xc7\x31\x29\x18\x64\x75\x6c\xda\x8a\x41\x6b\xf0\xc8\xd1\x21\x0f\x9d\x1b\x4e\x66\xf5\xe9\xbc\x3a\xc8\x59\x33\x2d\x91\xc2\xa4\x54\xfa\x1e\x5d\xfe\xf6\xf0\x60\x5f\x2a\x67\x86\x0d\x7c\x8d\xd6\x0e\x53\x94\x14\xb0\x66\xa6\x71\x7d\x3d\x19\x68\xec\xb6\x61\xb3\x0f\x24\xd7\x5b\x66\x72\xa7\x57\x5e\x6c\x43\x63\xf9\x78\x73\xe6\xc3\xd8\x8f\x29\x0a\xda\x50\x0e\x0e\xa8\x93\xc5\x9e\x50\xd5\xe7\x52\x23\xb5\x3a\x7e\x2f\x83\xaa\xa0\x07\x5b\x56\xad\xc0\x4a\xc1\x5e\xb9\x60\xd5\x31\xf2\xa9\x7c\x80\x20\xb3\x3b\x55\x81\x58\x90\xb8\x41\x0b\xd3\xe9\x10\x00\xfe\x06\xaf\x1e\x34\x60\x05\x61\xf9\xf8\xa4\x9e\xc7\x5e\x1b\x56\xb1\x8e\x7d\xd0\x8a\xe9\xba\xf1\x8a\xa9\x3a\x11\x13\x71\xcc\x44\xfc\x46\x19\x15\x2d\x6d\x29\x8c\xcb\xd6\xd7\xc3\x2f\xfc\x8f\xd4\xbf\x12\xa9\xcb\x3f\x11\xa9\xf1\x8f\xd4\xa0\x5b\x77\xcc\x2b\xd5\xe2\xb7\xfb\x95\x3a\xf5\xf8\x62\xf1\x79\x21\x99\xbd\xf8\x93\xf2\x3b\x00\x00\xff\xff\x40\x11\x30\xa3\xfd\x0c\x00\x00")

func uiTextViewGladeBytes() ([]byte, error) {
	return bindataRead(
		_uiTextViewGlade,
		"ui/text-view.glade",
	)
}

func uiTextViewGlade() (*asset, error) {
	bytes, err := uiTextViewGladeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ui/text-view.glade", size: 3325, mode: os.FileMode(420), modTime: time.Unix(1488446454, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"ui/cert-editor.glade": uiCertEditorGlade,
	"ui/key-editor.glade": uiKeyEditorGlade,
	"ui/login.glade": uiLoginGlade,
	"ui/main.glade": uiMainGlade,
	"ui/page-key.glade": uiPageKeyGlade,
	"ui/text-view.glade": uiTextViewGlade,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"ui": &bintree{nil, map[string]*bintree{
		"cert-editor.glade": &bintree{uiCertEditorGlade, map[string]*bintree{}},
		"key-editor.glade": &bintree{uiKeyEditorGlade, map[string]*bintree{}},
		"login.glade": &bintree{uiLoginGlade, map[string]*bintree{}},
		"main.glade": &bintree{uiMainGlade, map[string]*bintree{}},
		"page-key.glade": &bintree{uiPageKeyGlade, map[string]*bintree{}},
		"text-view.glade": &bintree{uiTextViewGlade, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

