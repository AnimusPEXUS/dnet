// Code generated by go-bindata.
// sources:
// ui/key-cert-editor.glade
// ui/login.glade
// ui/main.glade
// ui/module-acceptor.glade
// ui/net-mod-config-editor.glade
// DO NOT EDIT!

package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _uiKeyCertEditorGlade = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xe4\x5a\x41\x6f\xe3\x36\x13\xbd\xfb\x57\xf0\xe3\xf5\x83\xe3\x64\x8b\x16\x3d\xd8\x5a\x74\x17\xc8\x76\x91\x6d\x11\x20\x69\x8b\x9e\x04\x8a\x1a\xcb\x5c\x53\x1c\x95\xa4\xec\xa8\x45\xff\x7b\x21\xab\x46\xec\x88\xb2\x44\x29\x71\x1c\xf7\xe6\xc0\x1c\x72\xe6\xbd\xc7\xe1\xcc\x38\xd3\xf7\x0f\xa9\x24\x2b\xd0\x46\xa0\x9a\xd1\xab\x8b\x4b\x4a\x40\x71\x8c\x85\x4a\x66\xf4\x97\xfb\xeb\xf1\xf7\xf4\x7d\x30\x9a\xfe\x6f\x3c\x26\x9f\x40\x81\x66\x16\x62\xb2\x16\x76\x41\x12\xc9\x62\x20\xdf\x5c\xbc\xbb\xbc\xb8\x24\xe3\x71\x30\x9a\x0a\x65\x41\xcf\x19\x87\x60\x44\xc8\x54\xc3\x1f\xb9\xd0\x60\x88\x14\xd1\x8c\x26\x76\xf9\x7f\xfa\x78\x50\x69\x46\x27\x9b\x75\x18\x7d\x05\x6e\x09\x97\xcc\x98\x19\xfd\x64\x97\x3f\x81\xca\x29\x11\xf1\x8c\xa6\xa0\xf2\x2b\x5a\xae\x22\x64\x9a\x69\xcc\x40\xdb\x82\x28\x96\xc2\x8c\xae\x84\x11\x91\x04\x1a\xdc\xeb\x1c\xa6\x93\xed\xb7\xee\xc5\x9c\xa9\x70\x8e\x3c\x37\x34\xb8\x66\xd2\xd4\xd7\xf3\x85\x90\x71\xf5\xd9\xe5\xd2\xc7\x05\xf0\x8d\x5f\x9f\x2d\xa4\x95\x6f\x3c\x15\x21\xc7\xac\xa0\x5b\x2b\x4f\x17\xfb\xb8\xe9\xb2\x51\x18\x9a\x05\xae\x43\x26\x65\xf7\x83\x24\x8b\x40\x52\x62\x35\x53\x46\x32\xcb\x22\x09\x33\x5a\x80\xa1\xc1\x0f\x52\xe2\x9a\x7c\xc4\xac\xe8\xb2\x4f\x6e\x20\xcc\x55\x0c\x5a\x0a\xd5\x18\xe7\x74\x52\xe1\xf9\x2f\xd4\x93\x1d\xac\x7b\xe2\x5e\x06\x7c\x66\xb8\xdf\x2d\x70\x4d\x6e\xc0\x81\xfa\x00\xf8\xee\x20\x63\x9a\x59\xd4\xfb\x10\x9a\x54\x84\x16\x93\x44\x82\x09\xcd\x76\xc9\x71\xf1\x1c\x10\xd4\x7e\x2c\xa9\x08\x25\xb2\xf8\xb5\xd5\xd0\x4c\xec\x17\x64\x31\x99\x6b\x4c\xc9\xb5\x90\x70\x71\x71\x0a\xd7\xaa\x06\xa1\x61\x2b\x38\x5d\x08\xef\xd8\x0a\x88\xc5\x13\x02\xb0\x7e\xb1\xde\xec\xed\xe1\xa0\xad\x45\x94\xe1\x12\x8a\x50\xa8\x39\xbe\xb6\x0e\x9e\x39\xb1\x6e\xe3\x23\xe3\xf1\x12\x8a\x71\x19\xe1\x29\x28\xa8\x99\x87\x2c\x8f\xce\x9f\x8a\x2a\xc8\x37\xc0\x46\xf9\x41\xcc\x05\x67\x16\xce\x9c\x92\x9d\x48\x8f\xc4\xcb\xee\x17\x75\x4e\x3e\xe0\x43\x45\x87\x46\xb4\x47\x69\x02\x9e\xac\x47\x2d\x40\x59\x66\x05\x2a\x1a\xac\x4a\x74\x38\x93\x6d\x46\x26\x63\x5c\xa8\x84\x06\xdf\xfa\xf6\x18\x65\xbc\xc7\x16\xd7\x9e\x4b\x6e\xb7\xbe\x54\xda\x29\x89\xd8\xc8\x28\xb4\x45\xb6\x5b\x2b\xf4\x72\xb6\xaf\xc3\x7e\xe2\xfe\xeb\x06\x0a\x72\x5f\x64\xf0\xb7\x7b\xaf\x7d\x61\x6e\x77\x67\x7c\x29\x54\x72\xf8\x4c\x78\xc8\x98\x8a\x3d\x1d\x9d\x8b\x43\x77\xd6\x65\x91\xa1\x11\x95\xfc\x2e\x9b\x22\xa8\xb9\xbb\x97\xf7\x7a\x93\x0c\x5a\xef\xb5\x04\x47\x66\xf9\x0d\x31\x73\xd5\x97\x99\xa7\x31\xd6\xe3\xf3\x8e\xcd\x2f\x2e\x2f\xb5\x3d\x89\xc7\xfb\x75\xfd\x90\x5b\x5b\x6e\xfd\x22\x09\xae\xab\x89\x06\x0e\x62\x05\x26\x8c\x61\xce\x72\x69\x7d\xb0\xc9\xf2\x8c\x06\x9b\x81\x54\xc7\x4c\x9a\x49\xc6\x61\x81\x32\x06\x3d\x79\x8b\x22\x70\xc4\x39\x44\x04\x3f\xa3\x85\x08\x71\x59\x65\x19\x15\x1d\x5b\x0a\x1d\xb2\xe0\x53\x17\xc3\x79\x5e\x42\xf7\xa2\x49\xd0\xc7\x6c\x53\xf8\x59\x16\xf9\xbe\x90\x1b\xbb\x08\x75\x0c\xba\xcd\xb2\x86\x92\x1b\xa9\x3b\xae\x51\x4a\x88\x7f\x13\x2a\xde\x1b\xc5\x0d\x82\x69\x00\x54\x2e\xd3\x85\xd9\x78\x19\x31\x1d\x66\x28\x05\x2f\x68\xc0\xe4\x9a\x15\xc6\x67\x93\x55\xaf\x4d\x9c\x30\xba\xa1\xbc\x87\x07\xfb\xab\x80\x75\x25\x3a\xbb\x76\x89\x6e\x30\xaa\x03\x91\x75\x99\x43\x2c\x36\xb5\x56\x8b\xa2\x9a\xcc\x53\x54\x58\xd6\xca\x9d\x9c\x77\x95\x03\xdb\x6f\xdc\x8a\x75\x1a\x38\x17\x57\x5c\x91\xb2\xaa\x9d\x51\xcb\xa2\x1a\xf4\x4d\xd5\xd2\x71\x44\xdf\x0a\xae\xdf\x88\x59\x35\x6f\xd5\x04\xb2\xbb\xee\x72\x1d\x6d\x59\x14\x56\xaf\x4d\x8b\xd7\x8e\xe2\xa8\x85\x9f\x76\x52\xf6\xdb\xa7\x93\xa2\x24\x65\x3a\x11\x2a\x94\x30\xb7\x34\xb8\x6a\x28\xe5\x0f\x9a\x6a\x91\x2c\xfa\xda\x5a\xcc\x7a\x5a\x46\x68\x2d\xa6\xbe\xc6\x9d\xda\xe6\x76\x86\xdd\x2c\x7f\x4e\x59\xf2\xb4\xfb\x1c\xcc\xf5\x50\xbe\x5d\xf6\x05\x93\x22\x69\x6e\x0f\x9a\x0d\x8d\x45\xbe\xa4\x41\x62\x97\x8d\x53\x98\x43\xe6\x82\xa3\x0a\x8d\xf8\x13\x68\xf0\x5d\xdf\xa4\x7a\xe8\xce\xbb\xce\xdc\x96\xa4\x7d\x70\x6e\x6f\xbd\x9a\x2c\x5b\x9b\xe3\xc7\x40\x9b\x33\x98\xfb\xf9\xf0\xd3\x64\xd3\x73\xe0\x72\xfa\x55\x35\xd9\xfc\x34\x58\x24\x65\x0d\x42\x6e\xb5\x58\x31\x0b\xe4\x06\x8a\x11\x7d\xfc\x29\x98\x12\xa6\x62\x42\xb7\xbf\x51\xd2\x91\x50\xa4\x6c\x85\x08\x8b\x70\x05\x64\x34\x42\x25\x0b\xf2\x3b\xe6\xc4\x94\x0d\x0f\x59\x2a\x5c\x97\x7f\xea\xdd\x0d\x7d\xbd\xfd\x9a\x1b\x2b\xe6\x05\x0d\x38\x28\x0b\xba\xef\x05\x6c\x15\xc7\xb9\xdc\x82\x96\x4c\xe3\x7f\x0b\x86\x17\x04\x9d\x9c\xf3\x2f\x06\xfe\x0b\xc5\xda\x8f\x22\x8e\xe1\x45\xab\xb5\x8e\xca\x39\x42\x91\x57\x8f\xa5\x61\x88\xd9\x40\x7c\x37\xd2\x4f\x74\x48\x7d\x9d\x4b\xd9\x9c\x1e\xfb\x0f\x42\x3b\xf1\xf4\x5c\xf3\xe3\x83\xf3\x80\xd7\x1c\x99\x78\xcf\x00\x06\xf7\xff\x5d\xfb\x95\x5a\xdf\x9f\x31\x6d\x4f\x74\x92\xe2\xd1\xeb\xf7\xee\xf3\x3b\xb7\xec\xfd\xaf\xc4\x33\x0c\xed\xcf\x39\x13\xdd\xe6\x91\x14\x9c\xdc\x32\x6d\x9f\x3b\x19\x75\x78\x6b\x5e\x28\x7f\xf5\x1f\xb0\x77\x1d\x3e\xf7\x9d\xaf\xbf\xf3\x99\xaf\x3f\x86\x31\x9d\xec\xfc\x9b\xed\x3f\x01\x00\x00\xff\xff\x38\x8a\x33\xb3\xbf\x2b\x00\x00")

func uiKeyCertEditorGladeBytes() ([]byte, error) {
	return bindataRead(
		_uiKeyCertEditorGlade,
		"ui/key-cert-editor.glade",
	)
}

func uiKeyCertEditorGlade() (*asset, error) {
	bytes, err := uiKeyCertEditorGladeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ui/key-cert-editor.glade", size: 11199, mode: os.FileMode(420), modTime: time.Unix(1489591472, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _uiLoginGlade = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xdc\x58\x51\x6f\xdb\x36\x10\x7e\xcf\xaf\xe0\xf8\x3a\x38\x76\xb2\x0d\xe8\x83\xac\x02\xc5\x96\x60\x40\xb1\x0d\x68\x8b\x61\x4f\x02\x45\x9d\xa5\x5b\x28\x9e\x46\x9e\x64\xbb\xbf\x7e\x90\xd5\x34\x71\x4d\xd9\x92\xec\x15\x59\xdf\x04\x93\x1f\xef\x78\xf7\x7d\xc7\x3b\x47\xaf\x37\xa5\x11\x0d\x38\x8f\x64\x97\xf2\xe6\x7a\x21\x05\x58\x4d\x19\xda\x7c\x29\x3f\xbc\xbf\x9b\xbd\x92\xaf\xe3\xab\xe8\xbb\xd9\x4c\xdc\x83\x05\xa7\x18\x32\xb1\x46\x2e\x44\x6e\x54\x06\xe2\x87\xeb\xdb\xc5\xf5\x42\xcc\x66\xf1\x55\x84\x96\xc1\xad\x94\x86\xf8\x4a\x88\xc8\xc1\x3f\x35\x3a\xf0\xc2\x60\xba\x94\x39\x3f\x7c\x2f\x9f\x0c\xb5\x30\x39\xdf\xed\xa3\xf4\x6f\xd0\x2c\xb4\x51\xde\x2f\xe5\x3d\x3f\xfc\x89\x36\xa3\xb5\x14\x98\x2d\xa5\x23\x62\xd9\x6e\x13\x22\xaa\x1c\x55\xe0\x78\x2b\xac\x2a\x61\x29\xb5\xb2\xc9\x8a\x74\xed\x65\x7c\xa7\x8c\x87\x68\xfe\xb8\x21\xbc\x9f\x91\x0d\x48\xc1\x4e\x59\x6f\x14\xab\xd4\xc0\x52\x6e\xc1\xcb\xf8\x2d\xe5\x68\x4f\xc1\x1d\x78\xfc\xd8\x82\x06\x9a\x5b\xef\x6e\x91\x54\xe4\x91\x91\xac\x8c\x35\xb4\xe1\x39\x05\xcb\x60\xa5\x6a\xc3\xc9\x1a\x33\x2e\x64\xfc\x6a\xb1\x18\x8a\x28\x00\xf3\x82\x65\x7c\x7b\x1a\x92\x3b\xd5\x20\x6f\x7b\x7d\xd2\x05\x9a\xac\xfb\x0e\x25\xe8\x0d\x6d\xe4\xe3\xea\xe1\xe1\x0d\x7a\xdc\x85\xe9\xbd\xab\x0f\xa2\x34\x25\x91\x21\x4c\xa9\x5c\x8e\x36\x31\xb0\x62\x19\xff\x34\x02\xe1\xba\x20\x8d\x81\x30\x55\xe3\x00\x29\x31\x53\x39\x10\x43\x0e\xc1\xb2\xea\x38\xd2\x80\x63\xd4\xca\x0c\x01\xfa\x4a\x69\xb4\x79\x9f\x99\xbd\x1c\x86\xf3\xf8\x56\xa5\x60\xe4\xf3\x3d\x13\xb2\x39\x35\xa3\x21\x9c\xd9\x39\xd4\x23\x51\xf1\xab\x65\x12\x7f\x51\xed\xc4\xcf\xbf\x01\x8b\x77\x4c\x4e\xe5\x83\xcf\xde\x28\x83\xb9\x95\xf1\x81\x38\x3e\x03\x14\xb3\xc3\xb4\x66\xf0\xfb\x0b\xcf\x97\x1e\xc5\xdd\x69\x4d\x34\xca\xd4\xb0\x94\x29\x99\xac\xab\x66\x47\x51\x1e\x3f\xc2\x67\xcc\xcd\x8f\x8b\xc5\xe2\x4b\x50\x34\x0f\x3b\x11\xcd\xbb\xe4\xed\xfd\x56\x29\xfd\x80\x36\x3f\x7e\x6d\xd8\x54\xca\x66\x23\xf3\xb0\x42\x63\xc6\x65\xfc\xa9\xcc\xf5\xc4\x37\x9a\x1f\xb8\x1b\xcd\xbf\xe0\xe8\x10\xce\xde\x3b\xcc\x5e\x12\x65\x1d\xad\x93\xe3\x4a\x0c\x5a\x23\x53\x97\x76\x08\xf0\x20\x24\xe1\xb0\x84\xa4\x3c\x39\x36\xe7\xc4\x27\x84\xed\x97\xf5\x07\x0f\xae\xdd\x33\xe6\xb4\x93\x42\x0e\xcb\x45\xf4\x4a\x26\xe8\x32\xac\x38\x51\xcc\x4a\x17\x47\x2d\x05\xda\x0c\xaa\x86\x00\x03\x7a\x10\x21\x4d\x88\x6f\x9f\x04\x7f\x28\xef\xd7\xe4\xb2\x6f\x94\x04\x37\x5f\x97\x04\xbf\x58\x76\xdb\xae\x79\x86\xf6\x33\x69\x3d\xfa\x4a\xa4\x98\x02\xfd\xd4\xbe\x8e\x07\x33\x91\x61\xac\x12\x86\x0d\x07\x79\xf5\x0e\x4c\x1b\x1a\x4b\x76\x06\x1b\xf4\x8c\x36\x17\x4c\x42\x3b\x50\xed\x93\x0c\xeb\x31\xd6\x8a\xc7\x87\x74\xac\x9b\x95\xc3\x52\xb9\x6d\x82\x9a\x6c\xa2\x34\x63\xd3\x39\x39\x41\x42\x1e\x34\xd9\xec\x42\x87\xed\xf9\xe5\xc1\xb6\xef\x77\x73\x01\xaf\xce\x39\x6a\xcf\xa7\xa1\xf9\xbd\x43\x73\xc4\xc8\x85\xab\xc0\x11\x31\xbf\xa8\xa7\xe0\xa0\x0a\x54\x9f\x8a\xec\x7f\x59\x09\xce\x49\xfd\x19\x55\x64\xb2\x34\x77\x17\x45\xb3\x9b\x84\xc7\x73\xd5\x28\x0d\x05\x99\x0c\x5c\x3f\x45\x2d\xb1\xc0\xb2\x32\x58\xb6\x83\x76\x26\xb6\xc0\x2f\x9f\xaa\x17\x79\xb0\xce\x9f\x58\xc6\x74\xef\xdd\xc0\x32\xaa\x71\x7f\x9a\x58\x7a\xee\x7b\xa9\x89\xe5\x4d\xcd\x4c\xb6\xd3\x62\xba\xfb\x4e\xa8\x02\x7b\x62\x88\xe9\x6f\x97\x7e\xaf\xe0\xe0\xcf\xaa\xbe\x53\xce\x1d\x85\xc6\xc0\x1c\x68\xc0\x06\xfc\x90\x17\xfd\x7f\x34\xcf\xde\x4e\x65\xc7\xfe\x1d\x9f\x2d\x3e\x2d\x44\xf3\x67\x7f\x99\xfe\x1b\x00\x00\xff\xff\x39\x47\xbc\xd9\x8b\x15\x00\x00")

func uiLoginGladeBytes() ([]byte, error) {
	return bindataRead(
		_uiLoginGlade,
		"ui/login.glade",
	)
}

func uiLoginGlade() (*asset, error) {
	bytes, err := uiLoginGladeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ui/login.glade", size: 5515, mode: os.FileMode(420), modTime: time.Unix(1494349028, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _uiMainGlade = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x5c\xcd\x72\xdb\x36\x10\xbe\xe7\x29\x50\x5c\x3b\xb2\x14\xa7\xcd\xe4\x20\x31\x93\x4c\x12\xb7\xd3\x36\xe9\xc4\x4e\xdb\x1b\x07\x24\x57\x14\x2a\x08\x60\x01\x50\xb2\xf2\xf4\x1d\x91\x94\x25\x5b\x20\x08\x52\x94\x2d\x59\xbc\xd9\x23\xee\x02\x58\x7c\xdf\x62\x77\xf1\x33\x7c\x7b\x3b\x63\x68\x0e\x52\x51\xc1\x47\xf8\xe5\xc5\x00\x23\xe0\xa1\x88\x28\x8f\x47\xf8\xdb\xcd\xa7\xde\x1b\xfc\xd6\x7b\x31\xfc\xa1\xd7\x43\x57\xc0\x41\x12\x0d\x11\x5a\x50\x3d\x41\x31\x23\x11\xa0\x57\x17\x97\x83\x8b\x01\xea\xf5\xbc\x17\x43\xca\x35\xc8\x31\x09\xc1\x7b\x81\xd0\x50\xc2\x7f\x29\x95\xa0\x10\xa3\xc1\x08\xc7\x7a\xfa\x23\xde\x34\xb4\x12\xc3\xfd\xec\x3b\x11\xfc\x0b\xa1\x46\x21\x23\x4a\x8d\xf0\x95\x9e\xfe\x4d\x79\x24\x16\x18\xd1\x68\x84\xa5\x10\x1a\xaf\x3e\x43\x68\x98\x48\x91\x80\xd4\x4b\xc4\xc9\x0c\x46\x38\x24\xdc\x1f\x8b\x30\x55\xd8\xfb\x44\x98\x82\x61\x7f\xfd\x81\xf9\xfb\x45\xa6\xd6\x4f\x84\xa2\x9a\x0a\x8e\xbd\x10\x56\xfd\xad\x12\x8b\x60\x4c\x52\xa6\xfd\x05\x8d\xf4\x04\x7b\x6f\x06\x03\x57\x89\x09\xd0\x78\xa2\xb1\xf7\xba\x5a\x24\x96\x64\x4e\xf5\xb2\xb4\x4f\xe1\x84\xb2\x28\xff\xdb\x64\xb1\xf7\xe2\x16\xaf\x7f\xdd\x55\x3e\xa7\x8a\x06\x0c\xb0\x77\x23\xd3\x1d\x2b\x35\xb1\xac\x49\x46\x48\x0a\x5c\x93\xdc\xb2\x73\x90\x9a\x86\x84\x19\x05\xef\x8d\xc5\x3c\x9e\x5f\x80\x44\x20\xdf\x13\x89\xb7\xbf\x6b\x30\xb2\xa6\xa3\x33\xc9\x69\xaa\x57\x4d\x7d\xf8\x0c\xda\x55\x44\xa5\x41\x21\x15\x2c\xd1\x3b\x4e\x67\xa9\xfa\xf3\xe3\x3f\xdf\xae\x4b\xe5\x77\x6c\x63\xb6\xcf\x8d\x88\x63\x06\xef\x53\xad\x05\xcf\x79\x12\x64\x7f\xfb\x82\x33\xca\x01\x3f\xd4\xb0\xdb\x33\x46\x02\x60\x18\x69\x49\xb8\x62\x44\x93\x80\xc1\x08\x2f\x41\x61\xef\x4b\xa6\xa2\xac\x87\x8d\x67\xa1\x62\x26\xea\x8a\x4a\x08\x81\xce\x41\xf9\x05\xd9\xaa\x34\x0c\xfb\xb9\x11\x1f\xd8\xbb\xbf\x0b\x46\xc3\x87\xc3\x84\x84\x53\xca\x63\xfb\x64\xc3\x6d\x42\x78\x54\x13\x54\x63\xca\x58\x3d\xf8\x6e\xfc\xd7\x8e\x57\x59\x8f\x60\xa7\xbb\x3b\xe3\x74\x21\xe1\x67\xa1\x21\x10\x62\x9a\x03\x8c\x17\xff\xf9\x33\x42\xf9\x81\x69\x59\x47\x4c\x93\x60\xe5\xd2\xb1\xc7\x60\xec\xce\xcb\x89\x58\xf8\x81\x90\x11\xc8\x9a\xf3\xa5\x42\x29\x18\x23\xd5\xa3\x73\x64\xf2\x7d\xcf\xbd\x97\x41\x2b\x8c\x6a\x1d\xa6\x49\x76\x46\x64\x4c\xb9\xbf\xb2\x2b\xf6\x7e\x6e\x20\x29\xf3\xe5\xaf\x89\xa8\x16\x49\x33\xc1\x40\x68\x2d\x66\x35\x65\x9d\xd7\x2e\xfb\xec\x9a\x67\xf8\xd7\x19\x89\x4d\x1e\x79\xaf\x79\xde\x77\xae\x8d\x8d\x13\x46\x63\x8e\x3d\xe0\x51\x5d\x51\xa5\x45\x38\xc5\x5e\xac\xa7\x3d\x0e\x7a\x21\xe4\xb4\xae\x06\x1a\x0a\xee\x2b\xfa\x1d\xb0\xf7\xda\x2e\x6b\xf6\xe4\x6b\xad\x26\x47\x5d\xd6\xe6\xda\x61\x37\x31\x76\xb5\xdf\x2e\x93\xac\xf4\xdf\x9b\x81\x96\x8e\xc6\xb0\x6e\x15\x3f\xd4\x00\xe6\xef\x59\x08\x70\x02\xc0\x2c\x8f\x55\x6c\xb1\xd8\x9d\x36\xa2\xb5\xa4\x41\xaa\x41\x99\x3f\xd8\xfe\x64\x8d\xe7\x15\x10\xd1\x9c\xb0\x14\x46\xf8\x72\x30\x18\x14\xb9\x8a\x41\xb4\x6f\x57\xdf\x3e\x5a\x1b\x99\xb0\x0d\xb8\xbe\xec\xe0\x5a\xcb\x8f\x2a\x4d\x64\x35\x3a\x9d\xb1\x3e\x1f\x5c\x54\x38\x8c\x16\xb0\xfe\xf2\xf2\xa8\xb0\xfe\x54\x9e\xf9\xb2\x6d\xa8\x3b\xa7\x1f\x6b\x4e\x20\xbd\x4c\xf2\xe8\x76\x07\xf2\xee\xd4\x38\x8a\x30\xb2\xa9\xf7\x2e\x43\x53\x39\x92\x4c\xa9\x41\x8e\x86\x8a\x4e\x97\xcc\xa7\x65\x7a\xba\xc0\xfe\x99\x06\xf6\x0f\x03\xdb\x84\x84\x94\xc7\x55\xcd\xd6\x58\xc6\xcc\xb8\x30\xb5\xfd\xa4\x8b\x58\x6d\xcb\x35\xb7\x9e\xdd\x82\x66\x2b\xda\x82\x81\xbd\x6d\xd9\x86\x3d\x4d\x3a\xca\x3d\xe1\x57\xf8\x0d\x96\xd5\x2a\x6d\x0b\x2c\xaa\x5c\x64\x4d\x5d\xaa\xb3\xd0\x9a\xe4\xdd\x17\x5b\x93\xb4\x73\x6c\x89\xec\x8b\x2e\xb2\xc5\x98\xa8\x01\xbc\x3e\x72\x2d\x97\x4f\x04\x2f\x37\x15\xc7\x0a\x85\xc6\xe4\x70\x0e\xbe\xd0\x23\x63\xa1\xa8\xb2\xb7\x41\xf3\xbc\x48\xdf\xc4\x3a\x8f\x0f\xb0\xfd\x4b\xee\x77\x7a\x9e\x2f\x54\x5f\x1d\x12\xaa\xcf\x27\x9d\x6a\xbd\x72\xb0\x7f\x6e\xe0\xd4\xb9\xfa\x79\xc1\x39\xa4\x6d\xd7\x5a\x48\x12\xd7\xde\x6b\x6b\x7d\x76\xba\x84\xaf\x4b\xf8\x4e\x20\xe1\xbb\x92\x34\x3a\x85\x8c\x4f\x8a\x85\x5f\x23\x61\x7b\xd8\xba\x60\xe9\x8c\xd7\x51\xd0\x28\x0c\x2b\xcf\x9e\xf7\xb6\x67\x1b\x36\x35\xe9\x68\x94\x49\x9b\x14\xb9\xdb\xd6\x24\xcd\xc8\x52\xa4\xda\x57\x7a\xb9\x32\x88\x53\x6d\x1a\x55\x4e\x13\xb2\x45\xcc\xdb\xe7\x52\x24\x8c\x25\xa8\x89\x4f\x92\x84\xd1\x30\x33\x86\x9f\x48\x50\xa0\x95\x65\x3e\xcd\xe3\x28\x4f\xa2\xb3\x36\x5c\x46\x65\x52\x5c\x1b\x2c\x26\x25\x0d\xc2\x6c\x93\x9a\xa6\xa1\x36\x72\x08\xb7\x91\x53\xc8\x6d\xea\x55\xdd\xb0\xdb\xa4\xa3\x5e\xc1\xc0\xa4\xc1\x79\xff\x74\x63\x90\xea\x04\xc3\x96\x30\xa2\xf6\x68\x00\x7c\x85\x57\x03\x0b\x5a\x23\xc1\xc7\xac\x85\x8e\x03\xe7\xc2\x01\x87\xc2\x19\x3a\x2e\x0e\x44\x54\x1d\x9a\x04\x1f\xf2\x26\x3a\x16\x9c\x0b\x0b\x1c\x4a\x86\xe8\xb8\x58\x20\x61\x26\xe6\x07\x25\xc1\xd7\xac\x85\x8e\x03\xe7\xc2\x01\x87\x5a\x24\x3a\x2e\x0e\x28\x4d\x74\xaa\x0e\xc9\x81\xeb\xac\x85\x8b\x8b\x8e\x05\xe7\xc2\x82\x9f\x4e\x8e\x05\x12\xa6\xb0\x3c\xec\x42\xe0\xb4\xb9\x6c\x56\xdb\x31\xa0\xaa\x57\xc7\xc6\x00\xa7\xea\xd0\x51\x31\x40\x24\xc0\xfd\xe2\x76\xde\x01\x79\xf0\x25\x01\xde\x2d\x05\xe7\x43\x84\x8a\x7b\x04\x1b\x83\xec\x4b\x84\xf6\x37\xb8\x19\x8c\xb5\x4f\xb4\x26\xe1\xc4\xb1\xcc\xb5\xb3\x15\x26\x92\x3b\x05\x47\x76\xb8\xa6\xab\xe4\x3f\xb7\x4a\xfe\x4c\x44\x29\x83\xae\x92\xdf\xb9\xea\xb3\xa9\xe4\x93\x30\x84\x44\x6f\xb3\xa0\x35\xf4\xbf\xcb\x54\x77\xe0\x3f\x17\xf0\x3f\x5a\x09\xff\xd8\xe3\x94\x83\x9e\xa6\x3b\x93\x33\xe6\x93\x3a\x97\xcf\x4c\x0a\xaa\xfc\x12\x44\xe8\x8f\x7c\xb9\x77\xd2\x5e\x7d\x21\xed\xfe\x67\x45\x2f\x16\xf9\xd3\x29\xeb\x6b\x69\x81\x60\x51\xd9\xad\xb4\x4c\xbe\xe2\x66\x1a\x3a\x01\xf4\x37\x52\x50\x3c\x4a\x73\x64\x47\xa6\x3b\xe6\x3c\x60\xce\x9c\xd0\xec\xcd\x88\x8e\x3a\x07\xa1\x8e\xd3\xf6\xdf\x69\x50\xe7\x3a\x7b\x5f\x04\xa2\xe2\x0d\xac\xa7\xe1\x50\x53\x15\x93\x7d\x0f\xe6\xcf\xf7\x55\xa0\x26\x24\x12\x0b\x5f\x2f\x13\xc0\x1e\x75\xbb\x6a\xd1\x20\x21\xb8\x91\x00\x7f\x51\x28\xde\x28\xd3\xa6\xb2\x65\xdd\x6c\xf8\x49\xe3\xf6\xfc\xec\x7a\xf6\x7c\x1b\x27\xac\x97\xfd\x3b\xc2\x0a\x18\x84\x0e\xa9\x4d\x99\x85\xae\xef\xe4\x2d\xfe\x07\xb9\x24\x6d\x2e\xe9\xc0\xd3\x06\xbf\x4e\x41\xfc\x09\x15\xe9\x3a\x3f\x74\xf2\x7e\xa8\x59\x55\xae\xf3\x43\xe7\xed\x87\xba\x2b\x6d\x16\xc9\x03\xbe\xdd\xd4\xe6\xa5\x29\x4b\x4c\xdb\x5d\x69\x33\x26\x68\x1b\xb7\x69\xc9\xcd\x1e\x69\x8a\x0c\xfc\x6c\xff\x5e\xdb\xfe\xcf\x5c\xd6\x79\xa4\x71\x9f\x57\x2e\x4b\x3c\x5a\xf5\x2b\x97\xf7\x87\x78\xef\xc7\xfb\xc8\xa6\x9a\x41\xb0\xf5\xd6\xec\x30\x61\x24\x84\x89\x60\x11\xc8\xfe\x8e\xf4\xb6\x5a\x43\xdc\x44\xbf\xc3\x95\x14\x69\x92\x2f\xc9\x24\x49\xfc\x7c\xc7\x60\xbd\x0e\x0f\x17\x34\x8a\x41\xdf\xe5\xda\xc5\xff\xc5\xb0\x1d\xae\xcb\xf4\xad\x92\xe5\x37\x0c\xec\x72\x96\x53\xd9\x76\xc1\xf2\x83\xac\x76\xb9\xf2\xc3\x7f\x55\xed\x95\x1c\x97\xaa\x12\x2b\xdf\xb6\xb4\x4b\x1a\x76\x7a\xec\x02\x15\xc7\x59\xee\x10\xb5\x05\x84\x0d\xa6\x86\xfd\xad\x47\xb4\xff\x0f\x00\x00\xff\xff\xe9\x69\x66\xeb\x9d\x5b\x00\x00")

func uiMainGladeBytes() ([]byte, error) {
	return bindataRead(
		_uiMainGlade,
		"ui/main.glade",
	)
}

func uiMainGlade() (*asset, error) {
	bytes, err := uiMainGladeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ui/main.glade", size: 23453, mode: os.FileMode(420), modTime: time.Unix(1494327883, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _uiModuleAcceptorGlade = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x5b\xdd\x6e\xdb\x3a\x12\xbe\xf7\x53\xcc\x6a\x2f\x36\xc1\xda\x4e\xfa\xb3\xbb\x2d\x60\xbb\xd8\x6e\x9b\xa0\xc0\xb6\xbb\x40\x73\x50\x9c\x2b\x83\x26\x47\x12\x4f\x28\x52\x87\x1c\xd9\xf1\x6b\xf5\xae\xb7\x79\xb2\x03\x49\x56\xe2\xc4\x94\x6d\x39\x71\xa2\x9c\xe6\xe7\x42\x31\x39\x43\xce\xcf\x37\x33\xa4\x47\x83\x77\x17\x89\x82\x29\x5a\x27\x8d\x1e\x06\x2f\xfa\xc7\x01\xa0\xe6\x46\x48\x1d\x0d\x83\x5f\xce\x4e\x7a\x6f\x82\x77\xa3\xce\xe0\x2f\xbd\x1e\x9c\xa2\x46\xcb\x08\x05\xcc\x24\xc5\x10\x29\x26\x10\x5e\xf5\x5f\x1e\xf7\x8f\xa1\xd7\x1b\x75\x06\x52\x13\xda\x90\x71\x1c\x75\x00\x06\x16\x7f\xcf\xa4\x45\x07\x4a\x4e\x86\x41\x44\xe7\x7f\x0f\xae\x17\xca\xc9\x82\xa3\x62\x9e\x99\xfc\x86\x9c\x80\x2b\xe6\xdc\x30\x38\xa5\xf3\x6f\x52\x0b\x33\x0b\x40\x8a\x61\x30\x2b\x9f\xf3\x89\x00\x83\xd4\x9a\x14\x2d\xcd\x41\xb3\x04\x87\x01\x67\x7a\x1c\x1a\x9e\xb9\x60\x74\xc2\x94\xc3\xc1\x51\x35\xc1\x3f\x9f\x24\x29\x0c\x80\x2c\xd3\x4e\x31\x62\x13\x85\xc3\x60\x8e\x2e\x18\xfd\x9b\x73\x4c\x49\xea\x08\x26\x99\x54\x24\x35\x18\x0b\x78\x41\x68\x35\x53\x90\x18\x91\xa9\x55\xee\x3c\x96\x4a\x94\xcf\x3e\x31\x4e\xad\x14\x41\x35\xbc\xba\x99\xa9\x74\x72\xa2\x30\x18\x9d\xd9\x6c\x85\xf7\x2e\xd2\xfa\x68\x12\x66\x23\xa9\xc7\x0a\x43\x0a\x46\xff\x68\x40\x61\x65\x14\x37\x24\x21\x93\x36\x23\x98\x18\x22\x93\x6c\x49\x63\xcd\x6c\xec\x52\xc6\xa5\x8e\xb6\xa4\xe0\x46\x65\x89\xde\x44\x74\xc3\x88\x7e\x43\xfe\x97\x4d\x50\x05\xcb\x73\x76\xb0\xe6\xae\x16\xf5\xd1\xc5\x4c\xc9\x48\x07\x23\x47\xcc\xd2\xb6\x44\xaa\x90\xc2\xe7\xfc\x9f\x0b\xf7\x86\x12\x03\x4c\x73\x84\x4f\x3a\x34\xdb\xf2\x9d\x59\x96\x6e\x10\x9b\x11\x59\x39\xc9\x08\xdd\xcd\x81\xe5\xa1\x8a\x1b\x16\x8e\x07\x53\xa6\x32\x1c\x06\x13\xa3\x44\x19\x26\x96\x68\x8e\xfc\xfc\x06\x47\xa5\xe5\x6e\x7c\x96\x32\x7e\x2e\x75\xb4\x41\x35\x18\xd2\x98\x11\x31\x1e\x07\xa3\xe3\x6d\x05\x27\x93\x36\x27\x9a\x49\x41\x71\x30\x7a\xe9\x9f\x3f\x38\x5a\xd9\xef\xe0\xe8\x96\x87\x3e\x69\x8f\x45\x2d\xee\xee\xaf\xef\xcb\x10\xfd\xae\x4e\x87\x8f\xe7\x06\x2f\x1e\xc2\xac\x45\x5e\x2c\xb4\x33\x5e\x24\xab\x36\x5a\xfa\x9e\x62\x53\x31\xb2\x57\x43\xd7\xd8\xac\x05\x86\x6e\xa1\x55\xef\x05\xbf\x5f\x58\x82\x97\x3f\xda\x87\xde\x07\x09\xca\x4b\xe8\xcd\x77\xd0\x46\x23\xff\xb9\xa1\xfb\x9c\x7a\xef\x60\xd3\xff\xc4\xc8\xcf\x5d\x96\x5c\x7e\x6f\x1f\x7c\x5f\x3d\x1b\x76\x77\xc3\x9e\xe5\x47\xe3\x36\x06\x65\xef\xa9\xed\xd9\xaa\xdb\x59\xf5\x03\x3a\x6e\x65\x4a\xd2\xe8\x36\xda\xf6\x9f\x0f\x9c\x70\xcb\xfb\x9f\x16\x1a\x7b\xff\x19\xb7\xf9\xb9\xfd\x31\x73\xf4\x83\x80\x7e\xc9\x31\xc4\x35\x4e\x9e\xdd\xa3\xfd\xee\xf1\x20\x71\xa3\x85\x7e\x70\x2f\x39\xe1\x44\x2a\x84\xff\x33\x8a\xdb\x58\xc3\xbd\xde\xaf\x65\xdf\x9b\x8b\x36\xd9\x75\xfd\xd5\xb4\x5f\x28\xbf\x60\x2b\x11\x2d\x94\x0a\x53\x46\x71\x70\x9b\x76\x47\x91\xef\x22\xb6\x8f\x76\xab\xd0\xe6\x23\xdc\x31\xbc\xf9\x58\x6d\xbe\xb9\xae\xa3\x1a\x27\x46\x60\x30\xe2\x31\xb3\xf5\xa4\x3e\x1c\x41\x2d\x96\x7c\x4b\xe1\x45\xca\xb4\xd8\x41\xbb\xa1\x54\xaa\xb9\x64\xa9\x71\xb2\x4c\x81\xb5\xd8\xf5\x42\x11\x7c\x70\x84\x06\xde\xfb\x3e\x23\x32\xba\x74\xdf\x49\xf1\x3c\xb6\xe8\x90\x59\xbe\x8d\xff\xd6\x7b\x84\xc5\xaf\x05\x93\x26\x4a\xb8\x0f\x34\x34\x25\xb5\xc8\x51\x4e\xd1\x8d\x05\x86\x2c\x53\xb4\x89\xc3\x13\xf6\xac\xda\x7c\xdf\xc4\xb3\x1e\xb3\xf6\xd8\x73\x86\x5a\x09\xe4\x7c\x71\xe3\xd2\xa6\xbc\xf5\x73\x5c\x14\xee\xf9\x3e\xc9\x13\xf4\x4c\x8a\x7a\x5c\x75\x1d\x6c\x30\x78\xbd\x3a\xff\x97\xa2\x86\x8f\x55\xef\xc2\x67\x6f\xef\xc2\xbe\xdc\xa8\x09\x59\xb3\xa8\xb7\xe2\x83\x55\x08\xdb\xfb\x11\x65\xa7\x42\xf6\xcd\xf3\x17\xc2\x0f\x19\x42\x2e\x7f\x40\x0f\x3e\x85\x8b\x4e\x1d\x90\xee\xba\x79\xe7\x40\x1b\xaa\xba\x7a\x0e\xbb\x40\x31\x6a\xa0\x58\x3a\x50\x52\x17\x33\xcf\xb5\x99\x69\x30\x5a\xcd\x81\x85\x84\xb6\x62\x92\xa3\x51\xea\xa8\x73\xf9\x1d\x7a\x70\xb6\x4c\x91\x20\xcb\x47\x14\x3a\x07\xa1\xb1\x57\x3d\x43\x25\xa1\x7b\x9c\xce\x09\xc7\x99\xc2\xab\xc6\x89\xe3\xfe\x9b\xe3\x9b\x3f\xaf\x9f\x42\x1f\xc5\xbf\xda\x05\x9b\x32\x46\x3f\xbd\x53\xe3\x0a\x6e\xe6\x26\xa3\xb1\xa3\x79\xbe\xc7\x75\xb7\x08\xbb\x17\xec\xac\xe8\x1e\x1a\x97\x10\xb8\x53\xd5\x5e\xf6\x21\x6d\x48\x5c\x3b\x5b\x61\x83\x25\x9e\x4e\xe9\xde\x74\xa7\x4f\xff\x4c\xc8\x99\xe6\x2b\x59\xcc\xb7\xe9\x35\xdf\x5f\x16\x2c\x9e\x9d\xaa\x2d\x4e\xd5\xa6\xe3\xe0\x4e\x09\xeb\x6d\xbb\x12\xd6\xc7\xc2\x8e\x68\xf7\x9c\xaf\xee\xb9\x50\x6f\x7a\xcf\xf9\xf3\xdc\x69\xfe\x6a\x32\x60\x16\x21\x32\x52\x47\x40\x06\xca\x34\x0b\x1a\x67\x8b\x6a\xb3\xd3\x29\xda\x21\x7b\xd7\xe5\x27\x08\x03\x79\xcd\xbb\xe8\xbf\x07\x26\x44\x81\x36\xa6\x20\xb5\xc8\x59\x96\xff\xe3\x80\x69\x01\x9c\x69\x98\xe0\x82\x29\x0a\x60\x0e\xa4\xeb\x77\x3a\x57\xa7\xc7\x83\x54\x65\x91\xd4\x87\x15\xef\x2e\xc4\x66\x86\x53\xb4\x5d\x70\xb1\xc9\x94\xc8\xc9\x85\xc9\x26\x0a\x01\xb5\xcb\x2c\x8a\x2e\x4c\x30\x34\x16\x81\xec\x5c\xea\x7c\xcf\x38\x45\x5d\x54\xd3\x79\xf1\x9d\x74\xf3\x55\x16\xb5\x35\x9c\x1a\xc5\x74\x04\xe5\x2a\xf9\xf6\x5c\x96\xa0\x03\x49\x7f\x73\x20\xb5\xa4\x83\x43\x08\x33\xcd\xf3\x1d\x03\x5e\x20\x2f\xf6\xde\xef\x74\xbe\x9a\xab\x65\x62\x49\x45\xe3\x7e\xb1\x40\x99\x29\xf2\xb1\x6a\x3b\x40\x31\xa3\xb2\xe0\xcf\xff\xb4\x40\x14\x55\x85\x9f\x6b\x37\x66\xd3\x5c\xbd\x04\xa1\x35\x49\xb9\xb0\x45\x97\x22\x27\x39\x45\xe0\x16\x19\x19\x5b\x28\x2b\x9f\x4d\x36\x73\x54\xce\xe2\x46\x60\xbf\xd3\xf9\x14\x16\x03\x33\xa9\x54\x65\x9c\x92\x7b\x37\xff\xdc\xc2\x87\x2f\x48\x90\x5a\x13\x59\x96\x94\xb3\x8a\x13\x08\xcb\xc8\x24\x8c\x24\x67\x4a\xcd\xa1\xb8\xe4\xb9\xfd\xbe\x41\xbe\xc6\xe2\xf2\x07\x90\xf1\x18\x48\x26\x58\x49\x5d\x29\x50\x52\xb7\x50\x71\x21\x2c\x48\xca\x85\xb4\x58\x30\xa5\x18\xc1\xb1\x04\x21\x94\x0a\x61\x16\x4b\x1e\x17\x5b\xad\xac\xdd\xdf\xc3\x5d\x79\xfd\x79\x05\xee\xe5\xcc\x02\x6b\xce\x2d\x50\x9b\x09\xd7\x14\x22\x40\xf3\xf4\x0a\x81\x9b\xe3\xcf\x89\x5d\xed\xd9\xf3\xa9\xeb\x51\xe2\x4f\x79\x61\x78\xb1\x88\x42\x6b\xea\x35\xcf\x99\x22\x66\xc2\xcc\xc6\xb9\x32\x82\x91\xd4\x6b\x49\xbd\xa1\xda\xaf\xae\xba\x70\x7d\x27\x95\xdd\x55\x6d\xb5\xaa\xf3\x46\xe0\xaf\xc8\x33\x2b\x69\x0e\xdf\x98\x2d\x10\x77\x90\x2a\x64\x0e\xbb\x39\xcc\x44\x81\xbf\x5b\x90\xbc\x05\xe3\xc3\xa6\x7b\xd9\x0e\x6a\xb0\x19\x6e\x70\x6f\x90\xab\xe1\x95\x8b\x1d\x59\x93\x69\x71\xc5\xf0\xaf\x18\x62\xf8\xf2\x6d\xf9\x5b\xc7\x6a\x1d\x82\x61\x4d\x3d\x5b\x83\x64\xf0\xa2\x79\x2c\x09\x6f\xdf\x9a\x57\x0a\x57\x8c\x63\x6c\x94\x40\xeb\x8d\x2f\xfe\x62\x64\xdb\xd0\xf2\xa8\x2f\x20\x3c\xd8\x8b\x28\x37\xa5\x5c\x1a\xbc\x1e\x18\x1c\x2d\xbd\x10\xf8\x47\x00\x00\x00\xff\xff\x2c\xe0\xd5\x23\x69\x38\x00\x00")

func uiModuleAcceptorGladeBytes() ([]byte, error) {
	return bindataRead(
		_uiModuleAcceptorGlade,
		"ui/module-acceptor.glade",
	)
}

func uiModuleAcceptorGlade() (*asset, error) {
	bytes, err := uiModuleAcceptorGladeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ui/module-acceptor.glade", size: 14441, mode: os.FileMode(420), modTime: time.Unix(1493460483, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _uiNetModConfigEditorGlade = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x59\xcd\x6e\xdb\x3c\x10\xbc\xe7\x29\xf8\xf1\xfa\xc1\xb1\x93\xb4\x40\x0f\xb2\x02\xa4\x68\x72\xe9\x1f\xd0\xb4\x39\x12\x34\xb9\x96\x58\x53\xa4\x4a\xae\xfc\xf3\xf6\x85\x64\xa7\x71\x62\xaa\x96\x9c\x28\x11\xd0\xdc\x08\x93\x23\xae\x76\x66\xb8\x4b\x39\x3a\x5f\x66\x9a\xcc\xc1\x79\x65\xcd\x98\x9e\x1c\x8f\x28\x01\x23\xac\x54\x26\x19\xd3\xef\xd7\x97\x83\x77\xf4\x3c\x3e\x8a\xfe\x1b\x0c\xc8\x15\x18\x70\x1c\x41\x92\x85\xc2\x94\x24\x9a\x4b\x20\x67\xc7\xa7\xa3\xe3\x11\x19\x0c\xe2\xa3\x48\x19\x04\x37\xe5\x02\xe2\x23\x42\x22\x07\xbf\x0a\xe5\xc0\x13\xad\x26\x63\x9a\xe0\xec\x7f\x7a\xb7\x51\x09\xa3\xc3\x6a\x9d\x9d\xfc\x04\x81\x44\x68\xee\xfd\x98\x5e\xe1\xec\x46\x19\x69\x17\x94\x28\x39\xa6\x8b\xf5\xb8\x5c\x48\x48\x94\x3b\x9b\x83\xc3\x15\x31\x3c\x83\x31\x15\xdc\xb0\xa9\x15\x85\xa7\xf1\x25\xd7\x1e\xa2\xe1\xed\x82\xf0\xfa\xf5\xc3\x58\x6e\xbd\x42\x65\x0d\x8d\x05\x94\x11\xef\x83\x49\x98\xf2\x42\x23\x5b\x28\x89\x29\x8d\xdf\x8e\x46\x4d\x11\x29\xa8\x24\xc5\x46\x90\xc4\xf1\xb9\xc2\x55\x6d\x4c\x22\x55\x5a\xae\xc7\xa1\x9c\x5d\x39\x25\xe9\xed\xf4\xee\xd3\xe7\xca\xab\x89\x06\x1a\x5f\xbb\x62\x27\x4d\x87\xa4\x36\x84\xc9\xb8\x4b\x94\x61\x1a\xa6\xe5\x2b\xb7\x40\xb8\x4d\x96\x5a\x40\xd0\xe6\xed\x00\x13\x8b\x68\xb3\x86\x18\x67\x17\xcc\xe7\x5c\x28\x93\x34\x44\x08\xab\x8b\xcc\xec\x03\xdd\x23\x31\x4c\xe4\x47\x3e\x01\x4d\xb7\xd7\x1c\xc0\xe6\xa1\x8c\x86\x70\x29\xd7\x2a\x31\x34\xf6\xc8\x1d\x36\x05\xe9\xea\x2d\x08\x3a\x6e\xbc\xe6\xc8\x27\x1a\xc6\x74\x05\x9e\xc6\x5f\x1d\x78\x40\xf2\x99\x67\x35\x11\x44\xc3\x75\x4e\xee\xfd\x96\x73\x31\x53\x26\xd9\xb3\x29\x4c\x91\x71\x44\x2e\x52\x1a\xef\x18\xae\x0e\x85\x36\xff\x03\x3a\xa9\x0b\x69\x67\xff\x68\xf8\x80\xcb\x57\x6e\x69\xfc\xc9\xca\x1e\x92\x7a\xda\x2d\xa9\xdf\x84\xb3\x5a\x83\xbc\xd9\xae\x54\x5d\xb1\xdb\x06\x36\x87\x65\xce\x8d\x6c\x07\xf2\x29\x2f\x4b\x24\xae\x72\xa0\xb1\x32\xb5\xb0\x9d\xc4\x84\x93\x73\x0d\x4b\xfc\xa1\x60\x53\xcc\x71\xc1\x84\x35\x53\x95\x30\x84\x25\xd2\x87\xf0\x03\xd3\xf5\x88\x94\x85\xa0\x99\x35\xb6\x3c\xc6\xf7\xee\x1a\xd2\x74\x40\x43\x2f\x2b\xfe\xb3\xa6\xa0\x4d\x73\xd3\xb1\x59\x3e\x18\x74\xab\xb5\x18\xa0\x1c\xb2\xbc\x2a\x07\xac\x8c\xa1\x47\xd6\x49\xf7\x5b\xe7\x89\x48\xad\xa9\x38\x3d\x28\x53\x15\x49\xd5\x59\xcf\x40\x2a\xb4\x8e\x65\x56\x76\x4d\x52\xf7\xd5\xab\x01\xb5\x6d\x4a\x5e\x35\xd3\x3f\x85\x74\x6c\xe3\x7f\xa0\x91\x29\x34\xf4\xb4\x49\xad\x01\x75\xe6\xfe\xac\x4a\xc6\x73\x1c\xd1\xaf\xee\x7f\x1a\xf7\x77\xac\x90\x8b\x02\xd1\x9a\x0b\xbb\xec\x93\x1c\xfe\x7e\xf3\x0e\xd3\xba\xb2\x05\x32\x8f\xab\x32\x46\x30\xf2\xb1\xcd\xee\x3a\x2f\x6b\xeb\x4c\xaa\x31\xb3\xb3\x06\x5d\x6e\xbd\xbe\xbe\xcc\xda\x74\xae\x2f\xd1\x2d\x3b\x10\xa0\xe6\xe0\xd9\xe6\x93\xd7\x61\x4d\x73\x9d\x35\x42\x3b\x36\x71\x70\x08\x37\x55\x5a\xb7\x47\xdd\x7d\x2b\xac\x3d\xab\x83\xc6\x22\xe1\xab\xc0\xa3\xc4\x24\xb8\x11\x3b\x65\x37\x14\x74\xbd\xa0\xde\x57\x8f\x78\x15\x55\x5f\x44\x55\x7b\xbc\xb7\x11\xd5\x4b\x36\x23\x6f\x9e\xeb\x7e\x79\xff\x25\xb7\x26\xef\x26\xa2\xe1\xd6\x1f\x10\xbf\x03\x00\x00\xff\xff\x2e\x2a\x4d\x74\xd9\x18\x00\x00")

func uiNetModConfigEditorGladeBytes() ([]byte, error) {
	return bindataRead(
		_uiNetModConfigEditorGlade,
		"ui/net-mod-config-editor.glade",
	)
}

func uiNetModConfigEditorGlade() (*asset, error) {
	bytes, err := uiNetModConfigEditorGladeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ui/net-mod-config-editor.glade", size: 6361, mode: os.FileMode(420), modTime: time.Unix(1490816121, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"ui/key-cert-editor.glade": uiKeyCertEditorGlade,
	"ui/login.glade": uiLoginGlade,
	"ui/main.glade": uiMainGlade,
	"ui/module-acceptor.glade": uiModuleAcceptorGlade,
	"ui/net-mod-config-editor.glade": uiNetModConfigEditorGlade,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"ui": &bintree{nil, map[string]*bintree{
		"key-cert-editor.glade": &bintree{uiKeyCertEditorGlade, map[string]*bintree{}},
		"login.glade": &bintree{uiLoginGlade, map[string]*bintree{}},
		"main.glade": &bintree{uiMainGlade, map[string]*bintree{}},
		"module-acceptor.glade": &bintree{uiModuleAcceptorGlade, map[string]*bintree{}},
		"net-mod-config-editor.glade": &bintree{uiNetModConfigEditorGlade, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

